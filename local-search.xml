<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/06/17/Prometheus+grafana+loki/"/>
    <url>/2024/06/17/Prometheus+grafana+loki/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Prometheus-grafana-loki"><a href="#Prometheus-grafana-loki" class="headerlink" title="Prometheus+grafana+loki"></a>Prometheus+grafana+loki</h3><p>Loki 是一个轻量级的日志收集、分析的应用,采用的是 promtail 的方式来获取日志内容并送到 loki 里面进行存储,最终在 grafana 的 datasource 里面添加数据源进行日志的展示。之前一般使用的日志服务是elk,而使用elk可能需要kabana和grafana不断切换，影响效率，而loki相比elk更加轻量级，它使用和Prometheus一样的标签作为索引，减少了切换成本，也降低了相应的日志存储大小。本篇于centos8系统上测试搭建</p><h4 id="1-node-exporter"><a href="#1-node-exporter" class="headerlink" title="1.node_exporter"></a>1.node_exporter</h4><p>安装 </p><figure class="highlight apache"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://github.com/prometheus/node_exporter/releases/download/v1.<span class="hljs-number">7</span>.<span class="hljs-number">0</span>/node_exporter-<span class="hljs-number">1</span>.<span class="hljs-number">7</span>.<span class="hljs-number">0</span>.linux-amd64.tar.gz<br><span class="hljs-attribute">tar</span> xvf node_exporter-<span class="hljs-number">1</span>.<span class="hljs-number">7</span>.<span class="hljs-number">0</span>.linux-amd64.tar.gz<br><span class="hljs-attribute">cd</span> node_exporter-<span class="hljs-number">1</span>.<span class="hljs-number">7</span>.<span class="hljs-number">0</span>.linux-amd64/<br><span class="hljs-attribute">sudo</span> cp -p node_exporter /usr/local/bin<br></code></pre></td></tr></table></figure><p>服务</p><ul><li>创建一个 systemd 单元文件。</li></ul><p>/usr/lib/systemd/system/nodeexporter.service</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=NodeExporter<br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">ExecStart</span>=/usr/local/bin/node_exporter<br><span class="hljs-attr">Restart</span>=always<br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><ul><li>注册并启动 Node Exporter 作为服务。</li></ul><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nsis">sudo <span class="hljs-params">system</span>ctl daemon-reload<br>sudo <span class="hljs-params">system</span>ctl enable nodeexporter.service<br>sudo <span class="hljs-params">system</span>ctl start nodeexporter.service<br>sudo <span class="hljs-params">system</span>ctl status nodeexporter.service<br></code></pre></td></tr></table></figure><ul><li>检查是否可以侦听 9100/tcp。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml">[ec2-user@ip-10-0-0-124 bin]$ curl localhost:9100<br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Node Exporter<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"><span class="hljs-selector-tag">body</span> &#123;</span><br><span class="language-css">  <span class="hljs-attribute">font-family</span>: -apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,Liberation Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;</span><br><span class="language-css">  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css">……</span><br></code></pre></td></tr></table></figure><h4 id="2-promtail"><a href="#2-promtail" class="headerlink" title="2.promtail"></a>2.promtail</h4><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ul><li>下载并安装材料。</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/grafana/</span>loki<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/v2.9.5/</span>promtail-linux-amd64.zip<br>unzip promtail-linux-amd64.zip<br>sudo cp -p promtail-linux-amd64 <span class="hljs-regexp">/usr/</span>local/bin<br></code></pre></td></tr></table></figure><ul><li>创建配置文件。</li></ul><p>/etc/promtail/promtail-local-config.yaml</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">server</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">http_listen_port</span><span class="hljs-punctuation">:</span> <span class="hljs-string">9080</span><br>  <span class="hljs-attribute">grpc_listen_port</span><span class="hljs-punctuation">:</span> <span class="hljs-string">0</span><br><br><span class="hljs-attribute">positions</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-attribute">filename</span><span class="hljs-punctuation">:</span> <span class="hljs-string">/tmp/positions.yaml</span><br><br><span class="hljs-attribute">clients</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">url: http://10.0.0.249:3100/loki/api/v1/push</span><br><br><span class="hljs-attribute">scrape_configs</span><span class="hljs-punctuation">:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">job_name: system</span><br>  <span class="hljs-attribute">static_configs</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">targets:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attribute">labels</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">job</span><span class="hljs-punctuation">:</span> <span class="hljs-string">varlogs</span><br>      <span class="hljs-attribute">__path__</span><span class="hljs-punctuation">:</span> <span class="hljs-string">/var/log/*log</span><br><br><span class="hljs-bullet">-</span> <span class="hljs-string">job_name: nginx</span><br>  <span class="hljs-attribute">static_configs</span><span class="hljs-punctuation">:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">targets:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-string">localhost</span><br>    <span class="hljs-attribute">labels</span><span class="hljs-punctuation">:</span><br>      <span class="hljs-attribute">job</span><span class="hljs-punctuation">:</span> <span class="hljs-string">nginx</span><br>      <span class="hljs-attribute">__path__</span><span class="hljs-punctuation">:</span> <span class="hljs-string">/var/log/nginx/access.log</span><br></code></pre></td></tr></table></figure><h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><ul><li>创建一个 systemd 单元文件。</li></ul><p>/usr/lib/systemd/system/promtail.service</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Promtail<br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">ExecStart</span>=/usr/local/bin/promtail-linux-amd64 --config.file=/etc/promtail/promtail-local-config.yaml<br><span class="hljs-attr">Restart</span>=always<br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><ul><li>注册并启动 Promtail 作为服务。</li></ul><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs subunit">[ec2-user@ip<span class="hljs-string">-10</span><span class="hljs-string">-0</span><span class="hljs-string">-0</span><span class="hljs-string">-124</span> ~]$ sudo systemctl daemon-reload<br>[ec2-user@ip<span class="hljs-string">-10</span><span class="hljs-string">-0</span><span class="hljs-string">-0</span><span class="hljs-string">-124</span> ~]$ sudo systemctl enable promtail.service<br>[ec2-user@ip<span class="hljs-string">-10</span><span class="hljs-string">-0</span><span class="hljs-string">-0</span><span class="hljs-string">-124</span> ~]$ sudo systemctl start promtail.service<br>[ec2-user@ip<span class="hljs-string">-10</span><span class="hljs-string">-0</span><span class="hljs-string">-0</span><span class="hljs-string">-124</span> ~]$ sudo systemctl status promtail.service<br></code></pre></td></tr></table></figure><ul><li>检查是否可以侦听 9080/tcp。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs xml">[ec2-user@ip-10-0-0-124 ~]$ curl localhost:9080/targets<br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;Content-Type&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;robots&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;noindex,nofollow&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Targets<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;shortcut icon&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/static/img/favicon.ico?v=%28version%3d2.9.0%2c%20branch%3dHEAD%2c%20revision%3d2feb64f69%29&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/vendor/js/jquery-3.5.1.min.js?v=%28version%3d2.9.0%2c%20branch%3dHEAD%2c%20revision%3d2feb64f69%29&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/vendor/js/popper.min.js?v=%28version%3d2.9.0%2c%20branch%3dHEAD%2c%20revision%3d2feb64f69%29&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/static/vendor/bootstrap-4.1.3/js/bootstrap.min.js?v=%28version%3d2.9.0%2c%20branch%3dHEAD%2c%20revision%3d2feb64f69%29&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>……<br></code></pre></td></tr></table></figure><h4 id="3-prometheus"><a href="#3-prometheus" class="headerlink" title="3.prometheus"></a>3.prometheus</h4><p>安装</p><ul><li>下载并安装材料。</li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">wget</span> https://github.com/prometheus/prometheus/releases/download/v2.<span class="hljs-number">50</span>.<span class="hljs-number">1</span>/prometheus-<span class="hljs-number">2</span>.<span class="hljs-number">50</span>.<span class="hljs-number">1</span>.linux-amd64.tar.gz<br><span class="hljs-attribute">tar</span> xvf prometheus-<span class="hljs-number">2</span>.<span class="hljs-number">50</span>.<span class="hljs-number">1</span>.linux-amd64.tar.gz<br><span class="hljs-attribute">cd</span> prometheus-<span class="hljs-number">2</span>.<span class="hljs-number">50</span>.<span class="hljs-number">1</span>.linux-amd64/<br><span class="hljs-attribute">sudo</span> cp -p prometheus /usr/local/bin<br></code></pre></td></tr></table></figure><ul><li>创建配置文件。<ul><li>将 Node Exporter 作为监控目标（JOB）添加到默认配置文件中。</li></ul></li></ul><p>/etc/prometheus/prometheus.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># my global config</span><br><span class="hljs-attr">global:</span><br>  <span class="hljs-attr">scrape_interval:</span> <span class="hljs-string">15s</span> <span class="hljs-comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br>  <span class="hljs-attr">evaluation_interval:</span> <span class="hljs-string">15s</span> <span class="hljs-comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span><br>  <span class="hljs-comment"># scrape_timeout is set to the global default (10s).</span><br><br><span class="hljs-comment"># Alertmanager configuration</span><br><span class="hljs-attr">alerting:</span><br>  <span class="hljs-attr">alertmanagers:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">static_configs:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">targets:</span><br>          <span class="hljs-comment"># - alertmanager:9093</span><br><br><span class="hljs-comment"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span><br><span class="hljs-attr">rule_files:</span><br>  <span class="hljs-comment"># - &quot;first_rules.yml&quot;</span><br>  <span class="hljs-comment"># - &quot;second_rules.yml&quot;</span><br><br><span class="hljs-comment"># A scrape configuration containing exactly one endpoint to scrape:</span><br><span class="hljs-comment"># Here it&#x27;s Prometheus itself.</span><br><span class="hljs-attr">scrape_configs:</span><br>  <span class="hljs-comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">job_name:</span> <span class="hljs-string">&quot;prometheus&quot;</span><br><br>    <span class="hljs-comment"># metrics_path defaults to &#x27;/metrics&#x27;</span><br>    <span class="hljs-comment"># scheme defaults to &#x27;http&#x27;.</span><br><br>    <span class="hljs-attr">static_configs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">targets:</span> [<span class="hljs-string">&quot;localhost:9090&quot;</span>]<br><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">job_name:</span> <span class="hljs-string">&quot;node-exporter&quot;</span><br>    <span class="hljs-attr">static_configs:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">targets:</span> [<span class="hljs-string">&quot;10.0.0.124:9100&quot;</span>]<br><br></code></pre></td></tr></table></figure><p>服务</p><ul><li>创建一个 systemd 单元文件。</li></ul><p>/usr/lib/systemd/system/prometheus.service</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Prometheus<br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">ExecStart</span>=/usr/local/bin/prometheus --config.file=/etc/prometheus/prometheus.yml<br><span class="hljs-attr">Restart</span>=always<br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><ul><li>注册并启动 Prometheus 作为服务。</li></ul><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nsis">sudo <span class="hljs-params">system</span>ctl daemon-reload<br>sudo <span class="hljs-params">system</span>ctl enable prometheus.service<br>sudo <span class="hljs-params">system</span>ctl start prometheus.service<br>sudo <span class="hljs-params">system</span>ctl status prometheus.service<br></code></pre></td></tr></table></figure><ul><li>检查是否可以侦听 9090/tcp。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml">curl localhost:9090/graph<br><span class="hljs-meta">&lt;!doctype <span class="hljs-keyword">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;utf-8&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;shortcut icon&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./favicon.ico&quot;</span>/&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width,initial-scale=1,shrink-to-fit=no&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;theme-color&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;#000000&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">GLOBAL_CONSOLES_LINK</span>=<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-variable constant_">GLOBAL_AGENT_MODE</span>=<span class="hljs-string">&quot;false&quot;</span>,<span class="hljs-variable constant_">GLOBAL_READY</span>=<span class="hljs-string">&quot;true&quot;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;manifest&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./manifest.json&quot;</span> <span class="hljs-attr">crossorigin</span>=<span class="hljs-string">&quot;use-credentials&quot;</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Prometheus Time Series Collection and Processing Server<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">defer</span>=<span class="hljs-string">&quot;defer&quot;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./static/js/main.78875f45.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./static/css/main.4858e794.css&quot;</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">&quot;stylesheet&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;bootstrap&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">noscript</span>&gt;</span>You need to enable JavaScript to run this app.<span class="hljs-tag">&lt;/<span class="hljs-name">noscript</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><h4 id="4-loki"><a href="#4-loki" class="headerlink" title="4.loki"></a>4.loki</h4><ul><li>下载并安装材料。</li></ul><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs awk"><br>wget <span class="hljs-string">&quot;https://github.com/grafana/loki/releases/download/v2.9.5/loki-linux-amd64.zip&quot;</span><br>unzip loki-linux-amd64.zip<br>sudo cp -p loki-linux-amd64 <span class="hljs-regexp">/usr/</span>local/bin<br>wget https:<span class="hljs-regexp">//</span>raw.githubusercontent.com<span class="hljs-regexp">/grafana/</span>loki<span class="hljs-regexp">/main/</span>cmd<span class="hljs-regexp">/loki/</span>loki-local-config.yaml<br></code></pre></td></tr></table></figure><ul><li>创建配置文件。<ul><li>这次，我们将按原样使用下载的模板（loki-local-config.yaml）。</li></ul></li></ul><p>/etc/loki/loki-local-config.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">auth_enabled:</span> <span class="hljs-literal">false</span><br><br><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">http_listen_port:</span> <span class="hljs-number">3100</span><br>  <span class="hljs-attr">grpc_listen_port:</span> <span class="hljs-number">9096</span><br><br><span class="hljs-attr">common:</span><br>  <span class="hljs-attr">instance_addr:</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span><br>  <span class="hljs-attr">path_prefix:</span> <span class="hljs-string">/tmp/loki</span><br>  <span class="hljs-attr">storage:</span><br>    <span class="hljs-attr">filesystem:</span><br>      <span class="hljs-attr">chunks_directory:</span> <span class="hljs-string">/tmp/loki/chunks</span><br>      <span class="hljs-attr">rules_directory:</span> <span class="hljs-string">/tmp/loki/rules</span><br>  <span class="hljs-attr">replication_factor:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">ring:</span><br>    <span class="hljs-attr">kvstore:</span><br>      <span class="hljs-attr">store:</span> <span class="hljs-string">inmemory</span><br><br><span class="hljs-attr">query_range:</span><br>  <span class="hljs-attr">results_cache:</span><br>    <span class="hljs-attr">cache:</span><br>      <span class="hljs-attr">embedded_cache:</span><br>        <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>        <span class="hljs-attr">max_size_mb:</span> <span class="hljs-number">100</span><br><br><span class="hljs-attr">schema_config:</span><br>  <span class="hljs-attr">configs:</span><br>    <span class="hljs-bullet">-</span> <span class="hljs-attr">from:</span> <span class="hljs-number">2020-10-24</span><br>      <span class="hljs-attr">store:</span> <span class="hljs-string">boltdb-shipper</span><br>      <span class="hljs-attr">object_store:</span> <span class="hljs-string">filesystem</span><br>      <span class="hljs-attr">schema:</span> <span class="hljs-string">v11</span><br>      <span class="hljs-attr">index:</span><br>        <span class="hljs-attr">prefix:</span> <span class="hljs-string">index_</span><br>        <span class="hljs-attr">period:</span> <span class="hljs-string">24h</span><br><br><span class="hljs-attr">ruler:</span><br>  <span class="hljs-attr">alertmanager_url:</span> <span class="hljs-string">http://localhost:9093</span><br><br><span class="hljs-comment"># By default, Loki will send anonymous, but uniquely-identifiable usage and configuration</span><br><span class="hljs-comment"># analytics to Grafana Labs. These statistics are sent to https://stats.grafana.org/</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Statistics help us better understand how Loki is used, and they show us performance</span><br><span class="hljs-comment"># levels for most users. This helps us prioritize features and documentation.</span><br><span class="hljs-comment"># For more information on what&#x27;s sent, look at</span><br><span class="hljs-comment"># https://github.com/grafana/loki/blob/main/pkg/analytics/stats.go</span><br><span class="hljs-comment"># Refer to the buildReport method to see what goes into a report.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If you would like to disable reporting, uncomment the following lines:</span><br><span class="hljs-comment">#analytics:</span><br><span class="hljs-comment">#  reporting_enabled: false</span><br></code></pre></td></tr></table></figure><h4 id="服务-1"><a href="#服务-1" class="headerlink" title="服务"></a>服务</h4><ul><li>创建一个 systemd 单元文件。</li></ul><p>/usr/lib/systemd/system/loki.service</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[Unit]</span><br><span class="hljs-attr">Description</span>=Loki<br><span class="hljs-section">[Service]</span><br><span class="hljs-attr">Type</span>=simple<br><span class="hljs-attr">ExecStart</span>=/usr/local/bin/loki-linux-amd64 -config.file=/etc/loki/loki-local-config.yaml<br><span class="hljs-attr">Restart</span>=always<br><span class="hljs-section">[Install]</span><br><span class="hljs-attr">WantedBy</span>=multi-user.target<br></code></pre></td></tr></table></figure><ul><li>注册并启动 Loki 作为服务。</li></ul><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs nsis">sudo <span class="hljs-params">system</span>ctl daemon-reload<br>sudo <span class="hljs-params">system</span>ctl enable loki.service<br>sudo <span class="hljs-params">system</span>ctl start loki.service<br>sudo <span class="hljs-params">system</span>ctl status loki.service<br></code></pre></td></tr></table></figure><ul><li>检查是否可以侦听 3100/tcp。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl localhost:3100/metrics<br><span class="hljs-comment"># HELP cortex_distributor_ingester_clients The current number of ingester clients.</span><br><span class="hljs-comment"># TYPE cortex_distributor_ingester_clients gauge</span><br>cortex_distributor_ingester_clients 0<br><span class="hljs-comment"># HELP cortex_dns_failures_total The number of DNS lookup failures</span><br><span class="hljs-comment"># TYPE cortex_dns_failures_total counter</span><br>cortex_dns_failures_total&#123;name=<span class="hljs-string">&quot;memberlist&quot;</span>&#125; 0<br>……<br></code></pre></td></tr></table></figure><h4 id="5-grafana"><a href="#5-grafana" class="headerlink" title="5.grafana"></a>5.grafana</h4><ul><li><p>下载并安装材料。有关说明，请参阅<a href="https://grafana.com/docs/grafana/latest/setup-grafana/installation/redhat-rhel-fedora/">“在 RHEL 或 Fedora 上安装 Grafana”。</a></p></li><li><p>import the GPG key:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -q -O gpg.key https://rpm.grafana.com/gpg.key<br>sudo rpm --import gpg.key<br></code></pre></td></tr></table></figure></li><li><p>Create <code>/etc/yum.repos.d/grafana.repo</code> with the following content:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[grafana]<br>name=grafana<br>baseurl=https://rpm.grafana.com<br>repo_gpgcheck=1<br>enabled=1<br>gpgcheck=1<br>gpgkey=https://rpm.grafana.com/gpg.key<br>sslverify=1<br>sslcacert=/etc/pki/tls/certs/ca-bundle.crt<br></code></pre></td></tr></table></figure></li><li><p>To prevent beta versions from being installed, add the following exclude line to your <code>.repo</code> file.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">exclude=*beta*<br></code></pre></td></tr></table></figure></li><li><p>To install Grafana OSS, run the following command:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dnf install grafana<br></code></pre></td></tr></table></figure></li><li><p>将 Grafana 配置为始终作为服务启动。</p></li></ul><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">sudo systemctl <span class="hljs-keyword">enable</span> grafana-<span class="hljs-keyword">server</span><br>sudo systemctl <span class="hljs-keyword">start</span> grafana-<span class="hljs-keyword">server</span><br>sudo systemctl status grafana-<span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><h4 id="操作确认"><a href="#操作确认" class="headerlink" title="操作确认"></a>操作确认</h4><ul><li>使用“http://监控服务器的全球IP:3000/”访问浏览器。安装后的初始 ID/密码为“admin/admin”</li></ul><p>添加监控源直接跳过，只讲关于loki的使用</p><ul><li><p>从创建的仪表板屏幕中，选择“添加可视化”并创建一个新面板。</p></li><li><p>在面板创建屏幕上，设置以下内容并应用。</p><ul><li><p>数据来源：loki</p></li><li><p>查询：{filename=”/var/log/nginx/access.log”}</p><p>保存后大致如下</p><blockquote><p>::1 - - [18/Mar/192:168:148:141 +8880]<br>“GET /test HTTP/1.1” 484 3658”-“”cur1/8.2.1””<br>::1 - - [18/Mar/192:168:148:141 +8880]“GET / HTTP/1.1” 288 615 “-“ “curl/8.2.1” “-“</p><p>这样有告警发生时可以通过loki返回的内容来快速定位</p></blockquote></li></ul></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/06/17/nginx%20purge%20%E7%BC%93%E5%AD%98%E5%8F%8A%E6%B8%85%E7%90%86/"/>
    <url>/2024/06/17/nginx%20purge%20%E7%BC%93%E5%AD%98%E5%8F%8A%E6%B8%85%E7%90%86/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="nginx-purge-缓存及清理"><a href="#nginx-purge-缓存及清理" class="headerlink" title="nginx purge 缓存及清理"></a>nginx purge 缓存及清理</h3><p>内容缓存位于客户端和“源服务器”之间，保存了所有可见内容的副本。如果客户端请求缓存存储的内容，它将直接返回内容而无需与源服务器通信。由于内容缓存离客户端更近，这样可以提高性能，加之不用每次请求都重新执行页面生成任务，应用服务器也会得到更高效的利用。</p><p>Web 浏览器和应用服务器之间可能存在多种缓存：客户端浏览器缓存、中间缓存、内容交付网络 (CDN) 以及位于应用服务器前面的负载均衡器或反向代理。即使是反向代理/负载均衡器层面的缓存，也可以大大提高性能。</p><h4 id="配置基础缓存功能"><a href="#配置基础缓存功能" class="headerlink" title="配置基础缓存功能"></a>配置基础缓存功能</h4><p>启用基础缓存只需要2个指令：<code>proxy_cache_path</code> 和 <code>proxy_cache</code>。<code>proxy_cache_path</code> 指令用于设置缓存的路径和配置，<code>proxy_cache</code> 指令用于启用缓存。</p><figure class="highlight nginx"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">proxy_cache_path</span> /path/to/cache levels=<span class="hljs-number">1</span>:<span class="hljs-number">2</span> keys_zone=my_cache:<span class="hljs-number">10m</span> max_size=<span class="hljs-number">10g</span> <br>                 inactive=<span class="hljs-number">60m</span> use_temp_path=<span class="hljs-literal">off</span>;<br><br><span class="hljs-section">server</span> &#123;<br>    <span class="hljs-comment"># ...</span><br>    <span class="hljs-section">location</span> / &#123;<br>        <span class="hljs-attribute">proxy_cache</span> my_cache;<br>        <span class="hljs-attribute">proxy_pass</span> http://my_upstream;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>用于缓存的本地磁盘目录是 **/path/to/cache/**。</li><li><code>levels</code> 在 <strong>/path/to/cache/</strong> 下设置了一个两级目录结构。将大量文件放到一个目录下会导致文件访问缓慢，因此我们建议对大多数部署使用两级目录结构。如果没有添加 <code>levels</code> 参数，NGINX 会将所有文件放到同一个目录中。</li><li><code>keys_zone</code> 设置了一个共享内存区，用于存储缓存键 (key) 和元数据（比如使用计时器）。通过将键的副本放在内存中，NGINX 可以在不检索磁盘的情况下快速决定一个请求是命中（<code>HIT</code>）还是未命中缓存（<code>MISS</code>），从而显著提高检索速度。鉴于 1MB 内存可以存储大约 8000 个键的数据，那么上例中配置的 10MB 内存可以存储大约 80000 个键的数据。</li><li><code>max_size</code> 设置了缓存的存储空间上限（在上面的例子中是 10G）这是一个可选项；不指定具体值就代表允许缓存不断增长，直到占用所有可用的磁盘空间。当缓存达到上限时，<em>cache manager</em> 进程会删除近期最少使用的文件，把缓存空间降低到这个限值之下。</li><li><code>inactive</code> 指定了项目在不被访问的情况下可以在缓存中保留多长时间。</li></ul><p>测试机环境下本次设置</p><p>proxy_cache_path /app/proxy_cache_dir levels=1:2 keys_zone=cache1:200m max_size=10g<br>                 inactive=1h</p><p>不同类型的缓存可以设置不同的缓存时间，如果是静态类型可以自行设置更长缓存时间</p><p>以下面为例</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> <span class="hljs-regexp">~ \.(gif|jpg|jpeg|png|bmp|ico)$</span> &#123;<br>    <span class="hljs-attribute">proxy_set_header</span> Host  <span class="hljs-variable">$host</span>;<br>    <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For  <span class="hljs-variable">$remote_addr</span>;<br>    <span class="hljs-attribute">root</span> /usr/local/nginx/html  <span class="hljs-comment">#显示的相关资源</span><br>    proxy_pass http://127.0.0.1:8080;<br>    <span class="hljs-attribute">proxy_cache</span> cache1; <span class="hljs-comment">#设置资源缓存的zone</span><br>    <span class="hljs-attribute">proxy_cache_key</span> <span class="hljs-variable">$host</span><span class="hljs-variable">$uri</span><span class="hljs-variable">$is_args</span><span class="hljs-variable">$args</span>; <span class="hljs-comment">#设置缓存的key，以域名、URI、参数组合成Web缓存的Key值，Nginx根据Key值哈希，存储缓存内容到二级缓存目录内</span><br>    <span class="hljs-attribute">proxy_cache_valid</span> <span class="hljs-number">200</span> <span class="hljs-number">304</span> <span class="hljs-number">12h</span>; <span class="hljs-comment">#对不同的HTTP状态码设置不同的缓存时间</span><br>    <span class="hljs-attribute">proxy_cache_vaild</span> <span class="hljs-number">503</span> <span class="hljs-number">502</span> <span class="hljs-number">500</span> <span class="hljs-number">504</span> <span class="hljs-number">10s</span>;<br>    <span class="hljs-attribute">expires</span> <span class="hljs-number">7d</span>; <span class="hljs-comment">#缓存时间</span><br>&#125;<br></code></pre></td></tr></table></figure><p>修改完后nginx -s reload即可</p><p>访问html文件夹下部分文件，通过tree可以看到成功缓存</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ruby">root<span class="hljs-variable">@debian12</span><span class="hljs-symbol">:/app/proxy_cache_dir</span><span class="hljs-comment"># ls</span><br>root<span class="hljs-variable">@debian12</span><span class="hljs-symbol">:/app/proxy_cache_dir</span><span class="hljs-comment"># tree</span><br>.<br><br><span class="hljs-number">0</span> directories, <span class="hljs-number">0</span> files<br>root<span class="hljs-variable">@debian12</span><span class="hljs-symbol">:/app/proxy_cache_dir</span><span class="hljs-comment"># tree</span><br>.<br><span class="hljs-string">`-- e</span><br><span class="hljs-string">    `</span>-- 2c<br>        <span class="hljs-string">`-- 3762722c6cd4a71e28d487ff64fb32ce</span><br><span class="hljs-string"></span><br><span class="hljs-string">3 directories, 1 file</span><br></code></pre></td></tr></table></figure><h4 id="缓存清理"><a href="#缓存清理" class="headerlink" title="缓存清理"></a>缓存清理</h4><p>不是商业版nginx一般清理缓存使用ngx_cache_purge</p><p>下载地址<a href="https://github.com/FRiCKLE/ngx_cache_purge/archive/refs/tags/2.3.tar.gz">https://github.com/FRiCKLE/ngx_cache_purge/archive/refs/tags/2.3.tar.gz</a></p><p>安装后解压到nginx同级目录</p><p>需要nginx 重新编译 加上–add-module=/path/to/ngx_cache_purge</p><p>编译安装好后修改conf ,添加如下字段</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> ~/purge(/.*) &#123;<br>        <span class="hljs-attribute">allow</span>     <span class="hljs-number">127.0.0.1</span>;<br>        <span class="hljs-attribute">deny</span>      all;<br>        <span class="hljs-attribute">proxy_cache_purge</span> cache1 <span class="hljs-variable">$1</span><span class="hljs-variable">$is_args</span><span class="hljs-variable">$args</span>; <span class="hljs-comment">#设置的cache名称</span><br>    &#125;<br></code></pre></td></tr></table></figure><p>重载nginx后，使用ip/purge/指定缓存即可看到是否成功</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs subunit"><span class="hljs-keyword">Successful </span>purge<br><br>Key : 192.168.148.143/1.jpg<br>Path: /app/proxy_cache_dir/e/2c/3762722c6cd4a71e28d487ff64fb32ce<br>nginx/1.25.4<br></code></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ruby">root<span class="hljs-variable">@debian12</span><span class="hljs-symbol">:/app/proxy_cache_dir</span><span class="hljs-comment"># tree</span><br>.<br><span class="hljs-string">`-- e</span><br><span class="hljs-string">    `</span>-- 2c<br><br><span class="hljs-number">3</span> directories, <span class="hljs-number">0</span> files<br></code></pre></td></tr></table></figure><p>缓存已经删除</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/06/17/ansible%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E6%97%A0%E9%99%90%E5%86%BB%E7%BB%93/"/>
    <url>/2024/06/17/ansible%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E6%97%A0%E9%99%90%E5%86%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="ansible执行任务无限冻结"><a href="#ansible执行任务无限冻结" class="headerlink" title="ansible执行任务无限冻结"></a>ansible执行任务无限冻结</h3><p> 上午执行debian yml脚本测试机跑任务有报错：</p><figure class="highlight moonscript"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs moonscript">\<span class="hljs-name">ndebug3</span>: Ignored env TERM\r\<span class="hljs-name">ndebug3</span>: Ignored env SHELL\r\<span class="hljs-name">ndebug3</span>: Ignored env HISTSIZE\r\<span class="hljs-name">ndebug3</span>: Ignored env SSH_CLIENT\r\<span class="hljs-name">ndebug3</span>: Ignored env SSH_TTY\r\<span class="hljs-name">ndebug3</span>: Ignored env USER\r\<span class="hljs-name">ndebug3</span>: Ignored env LS_COLORS\r\<span class="hljs-name">ndebug3</span>: Ignored env MAIL\r\<span class="hljs-name">ndebug3</span>: Ignored env PATH\r\<span class="hljs-name">ndebug3</span>: Ignored env PWD\r\<span class="hljs-name">ndebug1</span>: Sending env LANG = en_US.UTF<span class="hljs-number">-8</span>\r\ndebug2: channel <span class="hljs-number">0</span>: request env confirm <span class="hljs-number">0</span>\r\ndebug3: send <span class="hljs-name">packet</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">98</span>\r\ndebug3: Ignored env HISTCONTROL\r\<span class="hljs-name">ndebug3</span>: Ignored env SHLVL\r\<span class="hljs-name">ndebug3</span>: Ignored env HOME\r\<span class="hljs-name">ndebug3</span>: Ignored env LOGNAME\r\<span class="hljs-name">ndebug3</span>: Ignored env SSH_CONNECTION\r\<span class="hljs-name">ndebug3</span>: Ignored env LESSOPEN\r\<span class="hljs-name">ndebug3</span>: Ignored env XDG_RUNTIME_DIR\r\<span class="hljs-name">ndebug3</span>: Ignored env LE_WORKING_DIR\r\<span class="hljs-name">ndebug3</span>: Ignored env _\r\ndebug1: Sending <span class="hljs-name">command</span>: /bin/sh -c <span class="hljs-string">&#x27;echo ~ &amp;&amp; sleep 0&#x27;</span>\r\ndebug2: channel <span class="hljs-number">0</span>: request exec confirm <span class="hljs-number">1</span>\r\ndebug3: send <span class="hljs-name">packet</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">98</span>\r\ndebug2: callback done\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: open confirm rwindow <span class="hljs-number">0</span> rmax <span class="hljs-number">32768</span>\r\ndebug2: channel <span class="hljs-number">0</span>: rcvd adjust <span class="hljs-number">2097152</span>\r\ndebug3: receive <span class="hljs-name">packet</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">99</span>\r\ndebug2: <span class="hljs-name">channel_input_status_confirm</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">99</span> id <span class="hljs-number">0</span>\r\ndebug2: exec request accepted on channel <span class="hljs-number">0</span>\r\ndebug3: receive <span class="hljs-name">packet</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">96</span>\r\ndebug2: channel <span class="hljs-number">0</span>: rcvd eof\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: output open -&gt; drain\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: obuf empty\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: close_write\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: output drain -&gt; closed\r\<span class="hljs-name">ndebug3</span>: receive <span class="hljs-name">packet</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">98</span>\r\ndebug1: <span class="hljs-name">client_input_channel_req</span>: channel <span class="hljs-number">0</span> rtype exit-status reply <span class="hljs-number">0</span>\r\ndebug3: receive <span class="hljs-name">packet</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">98</span>\r\ndebug1: <span class="hljs-name">client_input_channel_req</span>: channel <span class="hljs-number">0</span> rtype eow@openssh.com reply <span class="hljs-number">0</span>\r\ndebug2: channel <span class="hljs-number">0</span>: rcvd eow\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: close_read\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: input open -&gt; closed\r\<span class="hljs-name">ndebug3</span>: receive <span class="hljs-name">packet</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">97</span>\r\ndebug2: channel <span class="hljs-number">0</span>: rcvd close\r\<span class="hljs-name">ndebug3</span>: channel <span class="hljs-number">0</span>: will <span class="hljs-keyword">not</span> send data after close\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: almost dead\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: <span class="hljs-name">gc</span>: notify user\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: <span class="hljs-name">gc</span>: user detached\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: send close\r\<span class="hljs-name">ndebug3</span>: send <span class="hljs-name">packet</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">97</span>\r\ndebug2: channel <span class="hljs-number">0</span>: is dead\r\<span class="hljs-name">ndebug2</span>: channel <span class="hljs-number">0</span>: garbage collecting\r\<span class="hljs-name">ndebug1</span>: channel <span class="hljs-number">0</span>: <span class="hljs-name">free</span>: client-session, nchannels <span class="hljs-number">1</span>\r\ndebug3: channel <span class="hljs-number">0</span>: <span class="hljs-name">status</span>: The following connections are <span class="hljs-name">open</span>:\r\n #<span class="hljs-number">0</span> client-session (t4 r0 i3/<span class="hljs-number">0</span> o3/<span class="hljs-number">0</span> fd <span class="hljs-number">-1</span>/<span class="hljs-number">-1</span> cc <span class="hljs-number">-1</span>)\r\n\r\ndebug3: send <span class="hljs-name">packet</span>: <span class="hljs-built_in">type</span> <span class="hljs-number">1</span>\r\ndebug1: fd <span class="hljs-number">1</span> clearing O_NONBLOCK\r\<span class="hljs-name">ndebug1</span>: fd <span class="hljs-number">2</span> clearing O_NONBLOCK\r\<span class="hljs-name">nTransferred</span>: sent <span class="hljs-number">2880</span>, received <span class="hljs-number">3120</span> bytes, <span class="hljs-keyword">in</span> <span class="hljs-number">0.1</span> seconds\r\nBytes per <span class="hljs-name">second</span>: sent <span class="hljs-number">22837.4</span>, received <span class="hljs-number">24740.5</span>\r\ndebug1: Exit status <span class="hljs-number">0</span>\r\n<span class="hljs-string">&#x27;)</span><br><span class="hljs-string">&lt;192.168.180.75&gt; ESTABLISH SSH CONNECTION FOR USER: None</span><br></code></pre></td></tr></table></figure><p>同时发现ansible该任务执行情况似乎已停止</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">export</span> <span class="hljs-attribute">ANSIBLE_DEBUG</span>=<span class="hljs-literal">True</span><br></code></pre></td></tr></table></figure><p>单次运行该任务查看情况</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs routeros">/bin/sh -c <span class="hljs-string">&#x27;chmod u+x /root/.ansible/tmp/ansible-tmp-1709176669.73-1180-262921019047704/ /root/.ansible/tmp/ansible-tmp-1709176669.73-1180-262921019047704/AnsiballZ_command.py &amp;&amp; sleep 0&#x27;</span><br>1180 1709176671.67928: stdout chunk (<span class="hljs-attribute">state</span>=2):<br>&lt;&lt;&lt;<br>1180 1709176671.67973: stderr chunk (<span class="hljs-attribute">state</span>=2):<br>&lt;&lt;&lt;<br>1180 1709176671.68020: _low_level_execute_command() done: <span class="hljs-attribute">rc</span>=0, <span class="hljs-attribute">stdout</span>=, stderr=<br>1180 1709176671.68035: _low_level_execute_command(): starting<br>1180 1709176671.68054: _low_level_execute_command(): using become <span class="hljs-keyword">for</span> this command<br>1180 1709176671.68101: _low_level_execute_command(): executing: /bin/sh -c <span class="hljs-string">&#x27;sudo -H -S -n -u root /bin/sh -c &#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;echo BECOME-SUCCESS-itsgfhbpqzfhwwgkvwphpvjqitbdhyoy ; /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1709176669.73-1180-262921019047704/AnsiballZ_command.py&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27; &amp;&amp; sleep 0&#x27;</span><br>1180 1709176671.69024: Initial state: awaiting_escalation: BECOME-SUCCESS-itsgfhbpqzfhwwgkvwphpvjqitbdhyoy<br>1180 1709176671.96794: stdout chunk (<span class="hljs-attribute">state</span>=1):<br>BECOME-SUCCESS-itsgfhbpqzfhwwgkvwphpvjqitbdhyoy&lt;&lt;&lt;<br>1180 1709176671.96832: become_success: (<span class="hljs-attribute">source</span>=stdout, <span class="hljs-attribute">state</span>=awaiting_escalation): <span class="hljs-string">&#x27;BECOME-SUCCESS-itsgfhbpqzfhwwgkvwphpvjqitbdhyoy&#x27;</span><br>1180 1709176671.96864: stdout chunk (<span class="hljs-attribute">state</span>=3):<br><br>&lt;&lt;&lt;<br></code></pre></td></tr></table></figure><p>继续排查 -vvv</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">root</span> /bin/sh -c &#x27;<span class="hljs-string">&quot;&#x27;&quot;</span>&#x27;<span class="hljs-string">&quot;&#x27;&quot;</span>&#x27;<span class="hljs-string">&quot;&#x27;&quot;</span>&#x27;<span class="hljs-string">&quot;&#x27;&quot;</span>&#x27;echo BECOME-SUCCESS-dumkwdcjgjxigvkqjrjggpnsuhmfzzco ; /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-<span class="hljs-number">1709176773</span>.<span class="hljs-number">03</span>-<span class="hljs-number">3239</span>-<span class="hljs-number">3530003536688</span>/AnsiballZ_command.py&#x27;<span class="hljs-string">&quot;&#x27;&quot;</span>&#x27;<span class="hljs-string">&quot;&#x27;&quot;</span>&#x27;<span class="hljs-string">&quot;&#x27;&quot;</span>&#x27;<span class="hljs-string">&quot;&#x27;&quot;</span>&#x27; &amp;&amp; sleep <span class="hljs-number">0</span>&#x27;<span class="hljs-string">&quot;&#x27;&quot;</span>&#x27;&#x27;<br><span class="hljs-attribute">3239</span> <span class="hljs-number">1709176774</span>.<span class="hljs-number">99149</span>: Initial state: awaiting_escalation: BECOME-SUCCESS-dumkwdcjgjxigvkqjrjggpnsuhmfzzco<br><span class="hljs-attribute">3239</span> <span class="hljs-number">1709176775</span>.<span class="hljs-number">27828</span>: stdout chunk (state=<span class="hljs-number">1</span>):<br><span class="hljs-attribute">BECOME</span>-SUCCESS-dumkwdcjgjxigvkqjrjggpnsuhmfzzco<br><span class="hljs-section">&lt;&lt;&lt;</span><br><span class="hljs-section">3239 1709176775.27870: become_success: (source=stdout, state=awaiting_escalation): &#x27;BECOME-SUCCESS-dumkwdcjgjxigvkqjrjggpnsuhmfzzco&#x27;</span><br><span class="hljs-section">Escalation succeeded</span><br></code></pre></td></tr></table></figure><p>登录被执行机查看情况<br>运行ansible-playbook时， ansible会将一组代码复制到~/.ansible/tmp/下<br>登录查看 ，发现AnsiballZ_command.py</p><p>查询官网根据<a href="https://docs.ansible.com/ansible/latest/dev_guide/debugging.html">https://docs.ansible.com/ansible/latest/dev_guide/debugging.html</a><br>本人根据以下步骤解压该文件：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python3</span> AnsiballZ_command.<span class="hljs-keyword">py</span> explode<br></code></pre></td></tr></table></figure><p>解压后的文件放在debug_dir</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs smali">python3 -m trace --ignore-dir=/usr/lib --trace AnsiballZ_command.py<span class="hljs-built_in"> execute </span>&gt; /tmp/info.txt 2&gt; /tmp/error.txt<br></code></pre></td></tr></table></figure><p>得到以下内容</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs gradle"># egrep -n base64 <span class="hljs-regexp">/tmp/i</span>nfo.txt <span class="hljs-regexp">/tmp/</span>error.txt<br><span class="hljs-regexp">/tmp/i</span>nfo.txt:<span class="hljs-number">24</span>:AnsiballZ_lineinfile.py(<span class="hljs-number">17</span>):     <span class="hljs-keyword">import</span> base64<br><span class="hljs-regexp">/tmp/</span>error.txt:<span class="hljs-number">15</span>:    <span class="hljs-keyword">import</span> base64<br><span class="hljs-regexp">/tmp/</span>error.txt:<span class="hljs-number">16</span>:ModuleNotFoundError: No module named <span class="hljs-string">&#x27;base64&#x27;</span><br><span class="hljs-regexp">/tmp/</span>error.txt:<span class="hljs-number">38</span>:    <span class="hljs-keyword">import</span> base64<br><span class="hljs-regexp">/tmp/</span>error.txt:<span class="hljs-number">39</span>:ModuleNotFoundError: No module named <span class="hljs-string">&#x27;base64&#x27;</span><br></code></pre></td></tr></table></figure><p>发现缺少base64组件，同时ps -ef | grep ansible 也发现有多个进程<br>排查问题模块</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs gams">- name: Update Debian sources.list <span class="hljs-keyword">and</span> update apt cache<br>  hosts: <span class="hljs-keyword">all</span><br>  gather_facts: <span class="hljs-keyword">no</span><br>  tasks: <br>    - name: <span class="hljs-keyword">set</span>  fact<br>      set_fact:<br>        ansible_become: true<br>    - name: task1<br>      shell: |<br>        cd /usr/<span class="hljs-comment">local</span><br>        wget <span class="hljs-comment">https:</span>//<span class="hljs-comment">www.php.net</span>/distributions/<span class="hljs-comment">php-7.4.33.tar.gz</span><br>        tar <span class="hljs-comment">-zvxf</span> /usr/<span class="hljs-comment">local</span>/php<span class="hljs-number">-7.4</span><span class="hljs-number">.33</span>.tar.gz<br>        sudo apt-get install pkg-config<br>        export PKG_CONFIG=/<span class="hljs-comment">usr</span>/bin/<span class="hljs-comment">pkg-config</span><br>        cd /usr/<span class="hljs-comment">local</span>/php<span class="hljs-number">-7.4</span><span class="hljs-number">.33</span><br>        ./<span class="hljs-comment">configure</span><br>        make<br>        make <span class="hljs-comment">install</span><br></code></pre></td></tr></table></figure><p>查询官方文档才知道，由于变量的优先顺序问题，set fact还会覆盖任务变量，这导致控制器在sudo时会停止，甚至become也会导致该问题</p><p>去除become等后 ，执行任务依旧报错</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">SSH: EXEC ssh -o <span class="hljs-attribute">ServerAliveInterval</span>=50 -o <span class="hljs-attribute">StrictHostKeyChecking</span>=<span class="hljs-literal">no</span> -o <span class="hljs-string">&#x27;IdentityFile=&quot;/root/.ssh/id_rsa&quot;&#x27;</span> -o <span class="hljs-attribute">KbdInteractiveAuthentication</span>=<span class="hljs-literal">no</span> -o <span class="hljs-attribute">PreferredAuthentications</span>=gssapi-with-mic,gssapi-keyex,hostbased,publickey -o <span class="hljs-attribute">PasswordAuthentication</span>=<span class="hljs-literal">no</span> -o <span class="hljs-attribute">ConnectTimeout</span>=10 -tt 192.168.180.75 <span class="hljs-string">&#x27;/bin/sh -c &#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;sudo -H -S -n -u root /bin/sh -c &#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;&quot;&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;&quot;&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;echo BECOME-SUCCESS-zlrfozuysumycjuaiozhypghkpbcwikq ; /usr/bin/python3 /root/.ansible/tmp/ansible-tmp-1709183792.22-8730-100721031127498/AnsiballZ_command.py&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;&quot;&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;&quot;&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27; &amp;&amp; sleep 0&#x27;</span><span class="hljs-string">&quot;&#x27;&quot;</span><span class="hljs-string">&#x27;&#x27;</span><br></code></pre></td></tr></table></figure><p>继续排查问题，发现是连接问题，<br>修改主机/etc/ansible/ansible.cfg<br>添加一段 connect_timeout = 30<br>同时 受控机上kill ansible相关进程<br>再次执行，可顺利执行任务</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/02/21/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8B%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <url>/2024/02/21/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8B%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="虚拟机下部分内网穿透功能实现方法"><a href="#虚拟机下部分内网穿透功能实现方法" class="headerlink" title="虚拟机下部分内网穿透功能实现方法"></a>虚拟机下部分内网穿透功能实现方法</h2><p>最近个人搭建服务器的情况有所增长，简单介绍一下一些可以使得服务器能被公网ip访问的方法。内网穿透一般用于将位于内部私有网络（如家庭网络）的服务暴露到公共网络（如互联网）上，使外部用户可以访问这些服务。内网穿透通常用于以下情况：</p><ol><li><p><strong>远程访问</strong>：允许用户从外部访问内部网络中的设备或服务</p></li><li><p><strong>本地测试与开发</strong>：开发人员可以通过内网穿透将本地开发环境暴露到公共网络上，方便与他人共享或进行测试。</p></li><li><p><strong>IoT设备访问</strong>：让用户可以通过互联网访问家庭或企业中的物联网设备</p></li></ol><p>内网穿透通常涉及一个内网穿透工具或服务，它可以通过各种技术来实现内外网络之间的连接。常见的内网穿透工具包括Ngrok、FRP、花生壳等。一般而言，内网穿透目前仅适合用于家庭，私人设备的远程访问，不建议用于生产环境或其他非私人环境使用。下面稍微讲解一些内网穿透的方式。</p><h3 id="一、FRP"><a href="#一、FRP" class="headerlink" title="一、FRP"></a>一、FRP</h3><p>   frp 是一个专注于内网穿透的高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等多种协议，且支持 P2P 通信。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。它是一个是一个免费且开源的项目。目前一种较为实用的方式是依靠一个带有公网ip的跳板服务器来访问内网服务器。</p><p>下载地址：<a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a></p><p>本节列举部分frp可以进行的操作：</p><h4 id="1-ssh-访问内网机器"><a href="#1-ssh-访问内网机器" class="headerlink" title="1.ssh 访问内网机器"></a>1.ssh 访问内网机器</h4><ol><li><h6 id="在具有公网-IP-的机器上部署-frps"><a href="#在具有公网-IP-的机器上部署-frps" class="headerlink" title="在具有公网 IP 的机器上部署 frps"></a><strong>在具有公网 IP 的机器上部署 frps</strong></h6><p>部署 frps 并编辑 frps.toml 文件。以下是简化的配置，其中设置了 frp 服务器用于接收客户端连接的端口：</p><h6 id="bindPort-7000"><a href="#bindPort-7000" class="headerlink" title="bindPort = 7000"></a>bindPort = 7000</h6></li><li><h6 id="在需要被访问的内网机器上部署-frpc"><a href="#在需要被访问的内网机器上部署-frpc" class="headerlink" title="在需要被访问的内网机器上部署 frpc"></a><strong>在需要被访问的内网机器上部署 frpc</strong></h6><p>部署 frpc 并编辑 frpc.toml 文件，假设 frps 所在服务器的公网 IP 地址为 x.x.x.x。以下是示例配置：</p><figure class="highlight ini"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">serverAddr</span> = <span class="hljs-string">&quot;x.x.x.x&quot;</span><br><span class="hljs-attr">serverPort</span> = <span class="hljs-number">7000</span><br><br><span class="hljs-section">[[proxies]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;ssh&quot;</span><br><span class="hljs-attr">type</span> = <span class="hljs-string">&quot;tcp&quot;</span><br><span class="hljs-attr">localIP</span> = <span class="hljs-string">&quot;127.0.0.1&quot;</span><br><span class="hljs-attr">localPort</span> = <span class="hljs-number">22</span><br><span class="hljs-attr">remotePort</span> = <span class="hljs-number">6000</span><br></code></pre></td></tr></table></figure><ul><li><code>localIP</code> 和 <code>localPort</code> 配置为需要从公网访问的内网服务的地址和端口。</li><li><code>remotePort</code> 表示在 frp 服务端监听的端口，访问此端口的流量将被转发到本地服务的相应端口。</li></ul></li><li><p><strong>启动 frps 和 frpc</strong></p></li><li><p><strong>通过 SSH 访问内网机器</strong></p><p>使用以下命令通过 SSH 访问内网机器，假设用户名为 test：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -o Port=6000 <span class="hljs-built_in">test</span>@x.x.x.x<br></code></pre></td></tr></table></figure><p>frp 会将请求发送到 <code>x.x.x.x:6000</code> 的流量转发到内网机器的 22 端口。<br>![1708937411046](C:\Users\n\Documents\WeChat Files\wxid_tuvwrn5815wv22\FileStorage\Temp\1708937411046.png)</p></li></ol><p>![1708937459220](C:\Users\n\Documents\WeChat Files\wxid_tuvwrn5815wv22\FileStorage\Temp\1708937459220.png)</p><h4 id="2-对外提供简单的文件访问服务"><a href="#2-对外提供简单的文件访问服务" class="headerlink" title="2.对外提供简单的文件访问服务"></a>2.对外提供简单的文件访问服务</h4><p>通过使用 <code>static_file</code> 插件，您可以轻松地提供一个基于 HTTP 的文件访问服务，让其他人可以访问您指定的文件。</p><ol><li><h6 id="配置-frps-toml"><a href="#配置-frps-toml" class="headerlink" title="配置 frps.toml"></a><strong>配置 frps.toml</strong></h6><p>在 frps.toml 文件中添加以下内容：</p><h6 id="bindPort-7000-1"><a href="#bindPort-7000-1" class="headerlink" title="bindPort = 7000"></a>bindPort = 7000</h6></li><li><h6 id="配置-frpc-toml"><a href="#配置-frpc-toml" class="headerlink" title="配置 frpc.toml"></a><strong>配置 frpc.toml</strong></h6><p>在 frpc.toml 文件中添加以下内容，确保设置合适的文件路径、用户名和密码：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs toml"><span class="hljs-attr">serverAddr</span> = <span class="hljs-string">&quot;x.x.x.x&quot;</span> <span class="hljs-comment">#服务器公网ip</span><br><span class="hljs-attr">serverPort</span> = <span class="hljs-number">7000</span><br><br><span class="hljs-section">[[proxies]]</span><br><span class="hljs-attr">name</span> = <span class="hljs-string">&quot;test_static_file&quot;</span><br><span class="hljs-attr">type</span> = <span class="hljs-string">&quot;tcp&quot;</span><br><span class="hljs-attr">remotePort</span> = <span class="hljs-number">6000</span><br><span class="hljs-section">[proxies.plugin]</span><br><span class="hljs-attr">type</span> = <span class="hljs-string">&quot;static_file&quot;</span><br><span class="hljs-comment"># 本地文件目录，对外提供访问</span><br><span class="hljs-attr">localPath</span> = <span class="hljs-string">&quot;/tmp/file&quot;</span><br><span class="hljs-comment"># URL 中的前缀，将被去除，保留的内容即为要访问的文件路径</span><br><span class="hljs-attr">stripPrefix</span> = <span class="hljs-string">&quot;static&quot;</span><br><span class="hljs-attr">httpUser</span> = <span class="hljs-string">&quot;abc&quot;</span><br><span class="hljs-attr">httpPassword</span> = <span class="hljs-string">&quot;abc&quot;</span><br></code></pre></td></tr></table></figure><p>根据实际情况修改 <code>localPath</code>、<code>stripPrefix</code>、<code>httpUser</code> 和 <code>httpPassword</code>。</p></li><li><p><strong>启动 frps 和 frpc</strong></p></li><li><p><strong>通过浏览器访问文件</strong></p><p>使用浏览器访问 <code>http://x.x.x.x:6000/static/</code>，以查看位于 <code>/tmp/file</code> 目录下的文件。系统会要求输入设置的用户名和密码。</p><img src="/2024/02/21/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8B%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/Users\n\Documents\WeChat Files\wxid_tuvwrn5815wv22\FileStorage\Temp\82e2534929d56e5a16db2225267299a.png" alt="82e2534929d56e5a16db2225267299a" style="zoom:33%;"></li></ol><h3 id><a href="#" class="headerlink" title></a></h3><p>frp较为容易使用，但是需要有公网ip的服务器作为跳板机，毕竟它是将公网 IP 服务器的一个端口接收到的所有数据，转发到内网 IP 的主机上从而实现远程控制。目前阿里云等云服务商的服务器带宽等方面费用较高，如果仅个人需求远程操控可以使用其他方法。</p><h3 id="二、Tailscale"><a href="#二、Tailscale" class="headerlink" title="二、Tailscale"></a>二、Tailscale</h3><p>Tailscale属于一种虚拟组网工具，基于WireGuard。简单来说它可以把所有安装Tailscale服务的机器，都放到同一个局域网从而实行内网穿透。它的主要特点可以用下面一张图解释：</p><p>![f351bdbfe36cc5aa9dfa191ec7db564](C:\Users\n\Documents\WeChat Files\wxid_tuvwrn5815wv22\FileStorage\Temp\f351bdbfe36cc5aa9dfa191ec7db564.png)</p><p>相比与frp，tailscale安装方式更加方便，以centos8为例<br>可以使用一下命令安装</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">curl -fsSL https://tailscale.<span class="hljs-keyword">com</span>/install.<span class="hljs-keyword">sh</span> | <span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p>或者使用下面命令安装</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo dnf config-manager --add-repo https:<span class="hljs-regexp">//</span>pkgs.tailscale.com<span class="hljs-regexp">/stable/</span>centos<span class="hljs-regexp">/8/</span>tailscale.repo<br>sudo dnf install tailscale<br>sudo systemctl enable --now tailscaled<br>sudo tailscale up<br></code></pre></td></tr></table></figure><p>完成后会输出一条链接大致如下<br>![1708950435227](C:\Users\n\Documents\WeChat Files\wxid_tuvwrn5815wv22\FileStorage\Temp\1708950435227.png)</p><p>等待第二台服务器安装完成，加入后会得到以下提示<br>Tailscale 网络中的每台设备都有一个私有 100.x.y.z IP 地址， 每个协议都有效 - SSH、RDP、HTTP、Minecraft - 在 Tailscale 运行时使用您想要的任何协议。</p><p>接下来使用tailscale set –ssh 使得ssh功能可以添加到tailscale服务器，从而可以在任意端上远程登陆，操作效果如下<br>![ac075513ec4e37ee1738ee336bdd67b5](E:\QQ\Tencent Files\Tencent Files\1104343805\nt_qq\nt_data\Pic\2024-02\Ori\ac075513ec4e37ee1738ee336bdd67b5.png)</p><p>![959a199fa7e3587b845c7e334c77ed6](C:\Users\n\Documents\WeChat Files\wxid_tuvwrn5815wv22\FileStorage\Temp\959a199fa7e3587b845c7e334c77ed6.png)</p><p>同时，由其他段ssh连接会在结束后自动删除会话，保证了一定的安全性。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>rhcsa模拟复习</title>
    <link href="/2023/10/16/rhcsa%E6%A8%A1%E6%8B%9F%E5%A4%8D%E4%B9%A0/"/>
    <url>/2023/10/16/rhcsa%E6%A8%A1%E6%8B%9F%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h1><h2 id="1-在node1-domain250-example-com上执行以下任务"><a href="#1-在node1-domain250-example-com上执行以下任务" class="headerlink" title="1.在node1.domain250.example.com上执行以下任务"></a>1.在node1.domain250.example.com上执行以下任务</h2><h5 id="1-配置网络设置（24分）"><a href="#1-配置网络设置（24分）" class="headerlink" title="1.配置网络设置（24分）"></a>1.配置网络设置（24分）</h5><p><img src="1.png" alt="1"></p><h5 id="2-配置您的系统以使用默认存储库（6分）"><a href="#2-配置您的系统以使用默认存储库（6分）" class="headerlink" title="2.配置您的系统以使用默认存储库（6分）"></a>2.配置您的系统以使用默认存储库（6分）</h5><p><img src="2.png" alt="2"></p><h5 id="3-调试SElinux（13分）"><a href="#3-调试SElinux（13分）" class="headerlink" title="3.调试SElinux（13分）"></a>3.调试SElinux（13分）</h5><p><img src="3.png" alt="3"></p><h5 id="4-创建用户账户（30分）"><a href="#4-创建用户账户（30分）" class="headerlink" title="4.创建用户账户（30分）"></a>4.创建用户账户（30分）</h5><p><img src="4.png" alt="4"></p><h5 id="5-配置cron（6分）"><a href="#5-配置cron（6分）" class="headerlink" title="5.配置cron（6分）"></a>5.配置cron（6分）</h5><p><img src="5.png" alt="5"></p><h5 id="6-创建协作目录（19分）"><a href="#6-创建协作目录（19分）" class="headerlink" title="6.创建协作目录（19分）"></a>6.创建协作目录（19分）</h5><p><img src="6.png" alt="6"></p><h5 id="7-配置ntp（6分）"><a href="#7-配置ntp（6分）" class="headerlink" title="7.配置ntp（6分）"></a>7.配置ntp（6分）</h5><p><img src="7.png" alt="7"></p><h5 id="8-配置autofs自动挂载（24分）"><a href="#8-配置autofs自动挂载（24分）" class="headerlink" title="8.配置autofs自动挂载（24分）"></a>8.配置autofs自动挂载（24分）</h5><p><img src="8.png" alt="8"></p><h5 id="9-配置-var-tmp-fstab（37分）"><a href="#9-配置-var-tmp-fstab（37分）" class="headerlink" title="9.配置/var/tmp/fstab（37分）"></a>9.配置/var/tmp/fstab（37分）</h5><p><img src="9.png" alt="9"></p><h5 id="10-配置用户账户（6分）"><a href="#10-配置用户账户（6分）" class="headerlink" title="10.配置用户账户（6分）"></a>10.配置用户账户（6分）</h5><p><img src="10.png" alt="10"></p><h5 id="11-查找文件（6分）"><a href="#11-查找文件（6分）" class="headerlink" title="11.查找文件（6分）"></a>11.查找文件（6分）</h5><p><img src="11.png" alt="11"></p><h5 id="12-查找字符串（6分）"><a href="#12-查找字符串（6分）" class="headerlink" title="12.查找字符串（6分）"></a>12.查找字符串（6分）</h5><p><img src="12.png" alt="12"></p><h5 id="13-创建存档（6分）"><a href="#13-创建存档（6分）" class="headerlink" title="13.创建存档（6分）"></a>13.创建存档（6分）</h5><p><img src="13.png" alt="13"></p><h5 id="14-添加sudo免密"><a href="#14-添加sudo免密" class="headerlink" title="14.添加sudo免密"></a>14.添加sudo免密</h5><p><img src="14.png" alt="14"></p><h5 id="15-容器题目"><a href="#15-容器题目" class="headerlink" title="15.容器题目"></a>15.容器题目</h5><p><img src="15.png" alt="15"></p><h5 id="16-配置新用户密码策略（6分）"><a href="#16-配置新用户密码策略（6分）" class="headerlink" title="16.配置新用户密码策略（6分）"></a>16.配置新用户密码策略（6分）</h5><p><img src="16.png" alt="16"></p><h3 id="2-node1附加题"><a href="#2-node1附加题" class="headerlink" title="2.node1附加题"></a>2.node1附加题</h3><h5 id="1-创建shell脚本"><a href="#1-创建shell脚本" class="headerlink" title="1.创建shell脚本"></a>1.创建shell脚本</h5><p><img src="17.png" alt="17"></p><h5 id="2-登录普通用户设置欢迎语"><a href="#2-登录普通用户设置欢迎语" class="headerlink" title="2.登录普通用户设置欢迎语"></a>2.登录普通用户设置欢迎语</h5><p>登录到普通用户后提示一句欢迎语‘hello word !’或者用户在登陆前显示欢迎语提示</p><h5 id="3-设置用户默认创建文件UMASK"><a href="#3-设置用户默认创建文件UMASK" class="headerlink" title="3.设置用户默认创建文件UMASK"></a>3.设置用户默认创建文件UMASK</h5><p>用户natasha默认创建一个文件权限r–r–r– 默认创建目录为r-xr-xr-x</p><h5 id="4-生成环境变量"><a href="#4-生成环境变量" class="headerlink" title="4.生成环境变量"></a>4.生成环境变量</h5><p>生成环境变量rhcsa，用户在使用这个变量时输出一句话“This is RHCSA!”</p><p>生成环境变量rhce，用户在使用这个变量时输出一句话“This is RHCE!”</p><h2 id="3-在node2-domain250-example-com上执行以下任务"><a href="#3-在node2-domain250-example-com上执行以下任务" class="headerlink" title="3.在node2.domain250.example.com上执行以下任务"></a>3.在node2.domain250.example.com上执行以下任务</h2><h5 id="1-设置root密码（6分）"><a href="#1-设置root密码（6分）" class="headerlink" title="1.设置root密码（6分）"></a>1.设置root密码（6分）</h5><p><img src="18.png" alt="18"></p><h5 id="2-配置系统以使用默认存储库（6分）"><a href="#2-配置系统以使用默认存储库（6分）" class="headerlink" title="2.配置系统以使用默认存储库（6分）"></a>2.配置系统以使用默认存储库（6分）</h5><p><img src="19.png" alt="19"></p><h5 id="3-调整逻辑卷大小（6分）"><a href="#3-调整逻辑卷大小（6分）" class="headerlink" title="3.调整逻辑卷大小（6分）"></a>3.调整逻辑卷大小（6分）</h5><p><img src="20.png" alt="20"></p><h5 id="4-添加交换分区（6分）"><a href="#4-添加交换分区（6分）" class="headerlink" title="4.添加交换分区（6分）"></a>4.添加交换分区（6分）</h5><p><img src="21.png" alt="21"></p><h5 id="5-创建逻辑卷（18分）"><a href="#5-创建逻辑卷（18分）" class="headerlink" title="5.创建逻辑卷（18分）"></a>5.创建逻辑卷（18分）</h5><p><img src="22.png" alt="22"></p><h5 id="6-创建VDO卷（31分）"><a href="#6-创建VDO卷（31分）" class="headerlink" title="6.创建VDO卷（31分）"></a>6.创建VDO卷（31分）</h5><p><img src="23.png" alt="23"></p><h5 id="7-配置系统调优（6分）"><a href="#7-配置系统调优（6分）" class="headerlink" title="7.配置系统调优（6分）"></a>7.配置系统调优（6分）</h5><p><img src="24.png" alt="24"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>9.21</title>
    <link href="/2023/09/21/9.21/"/>
    <url>/2023/09/21/9.21/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="9-21"><a href="#9-21" class="headerlink" title="9.21"></a>9.21</h1><span id="more"></span><h3 id="1-Redis"><a href="#1-Redis" class="headerlink" title="1.Redis"></a><strong>1.Redis</strong></h3><h5 id="1-持久化"><a href="#1-持久化" class="headerlink" title="1.持久化"></a>1.持久化</h5><p>Redis是一个内存数据库，它具有持久化功能，以确保在重启时数据不会丢失。Redis具有两种主要的持久化机制，即AOF（Append Only File）和RDB（Redis Database）。</p><p>1.AOF持久化机制：</p><ul><li>AOF以日志的形式记录每个写操作，将其追加到文件末尾。</li><li>AOF文件由文本命令构成，因此非常易于理解和解析。</li><li>AOF文件的大小通常比RDB文件大，因为它以追加的方式记录每个写操作。</li><li>由于AOF文件包含完整的操作历史，当Redis重启时，可以通过重新执行AOF文件中的命令来恢复数据。</li><li>AOF文件可以通过配置选项设置同步策略，可以选择每个写操作都同步到磁盘（fsync），或者定期同步。</li></ul><p>2.RDB持久化机制：</p><ul><li>RDB持久化机制是通过周期性地将Redis数据库转储到磁盘上的二进制文件来持久化数据。</li><li>RDB文件是一个紧凑的二进制文件，包含了数据库的快照。</li><li>RDB持久化机制适用于备份和恢复数据，因为它提供了很好的压缩和性能。</li><li>RDB文件的大小通常比AOF文件小，因为它只包含了数据库的快照，而不是每个写操作的历史记录。</li><li>当Redis重启时，可以通过加载RDB文件来恢复数据。</li></ul><p>Redis的4.0版本支持同时使用两种；同时开启RDB和AOF：在这种情况下当redis重启的时候优先加载AOF文件来恢复原始数据，因为在通常情况下AOF文件保存的数据要比RDB文件保存的数据集要完整。RDB的数据不实时，同时使用两者时服务器重启也只会找AOF文件。</p><p>以1虚拟机为例：</p><figure class="highlight awk"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/apps/</span>redis<span class="hljs-regexp">/etc/</span>redis.conf<br></code></pre></td></tr></table></figure><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs arduino">appendonly yes<br><span class="hljs-keyword">auto</span>-aof-rewrite-percentage <span class="hljs-number">100</span><br><span class="hljs-keyword">auto</span>-aof-rewrite-min-size <span class="hljs-number">128</span>mb<br></code></pre></td></tr></table></figure><p>开启AOF模式，在AOF文件大小超过128MB并且AOF文件增长超过之前AOF文件大小的100%时进行自动重写</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">save</span> <span class="hljs-number">1200</span> <span class="hljs-number">1</span><br><span class="hljs-attribute">save</span> <span class="hljs-number">300</span> <span class="hljs-number">100</span><br><span class="hljs-attribute">save</span> <span class="hljs-number">60</span> <span class="hljs-number">10000</span><br></code></pre></td></tr></table></figure><p>指在1200秒（20分钟）内至少有1个key发生变化时，或者在300秒（5分钟）内至少有10个key发生变化时，或者在60秒内（1分钟）至少有10000个key发生变化时，Redis将执行RDB快照</p><p>修改完配置后</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service redis restart</span><br></code></pre></td></tr></table></figure><p>远程登录确认aof服务情况</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">config get appendonly<br></code></pre></td></tr></table></figure><p><img src="9.21.1.png" alt="9.21.1"></p><p><img src="9.21.2.png" alt="9.21.2"></p><h5 id="2-主从配置"><a href="#2-主从配置" class="headerlink" title="2.主从配置"></a>2.主从配置</h5><p>Redis的高可靠性，一是依靠数据尽量少丢失，二是服务尽量少中断。故Redis提供了主从库模式，以保证数据副本的一致，主从库之间采用的是读写分离的方式。以2个虚拟机为例</p><p>打开主库的Redis配置文件 </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/apps/</span>redis<span class="hljs-regexp">/etc/</span>redis.conf<br></code></pre></td></tr></table></figure><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">找到<span class="hljs-comment">#bind 127.0.0.1`行，并将其注释去掉，以允许其他机器连接。</span><br>找到masterauth <span class="hljs-variable">&lt;master-password&gt;</span>`行，并设置与主节点相同的密码。<br>找到replicaof <span class="hljs-variable">&lt;master-ip&gt;</span> <span class="hljs-variable">&lt;master-port&gt;</span>行，并注释掉，以配置主节点。<br></code></pre></td></tr></table></figure><p>从库</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs cpp">找到<span class="hljs-meta">#bind 127.0.0.1`行，并将其注释去掉，以允许其他机器连接。</span><br> <span class="hljs-meta"># replicaof <span class="hljs-string">&lt;masterip&gt;</span> <span class="hljs-string">&lt;masterport&gt;</span> </span><br> 找到masterauth &lt;master-password&gt;`行，并设置与主节点相同的密码<br></code></pre></td></tr></table></figure><p>改完配置后重启服务</p><p>登录从库redis-cli</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">replicaof</span> <span class="hljs-number">192.168.148.138</span> <span class="hljs-number">6379</span><br></code></pre></td></tr></table></figure><p>绑定主库的ip地址和端口</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">info</span> <span class="hljs-keyword">replication</span><br></code></pre></td></tr></table></figure><p>确认情况，已变成从库</p><p><img src="9.21.3.png" alt="9.21.3"></p><p><img src="9.21.4.png" alt="9.21.4"></p><h5 id="3-哨兵模式"><a href="#3-哨兵模式" class="headerlink" title="3.哨兵模式"></a>3.哨兵模式</h5>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>9.2</title>
    <link href="/2023/09/20/9.20/"/>
    <url>/2023/09/20/9.20/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><span id="more"></span><h3 id="1-mysql"><a href="#1-mysql" class="headerlink" title="1.mysql"></a><strong>1.mysql</strong></h3><h4 id="4-主从复制"><a href="#4-主从复制" class="headerlink" title="4.主从复制"></a>4.主从复制</h4><p>​       主从复制是指一台服务器充当主数据库服务器，另一台或多台服务器充当从数据库服务器，主服务器中的数据自动复制到从服务器之中。对于多级复制，数据库服务器即可充当主机，也可充当从机。MySQL主从复制的基础是主服务器对数据库修改记录二进制日志，从服务器通过主服务器的二进制日志自动执行更新。</p><p>一般而言，主从复制的步骤的一般为：</p><p>1.主库的更新事件被写到主库的binlog日志里；</p><p>2.从库发起连接，连接到主库;</p><p>3.从主库创建一个binlog dump 线程，把binlog的内容发送到从库；</p><p>4.从库启动之后，创建一个I/O线程，读取主库传过来的binlog内容并写入到relay log；</p><p>5.从库再创建一个SQL线程，从relaylog里面读取内容，执行读取到的更新事件，更新内容</p><p>本次进行一次环境搭建，测试异步复制及半同步</p><h5 id="1-异步复制"><a href="#1-异步复制" class="headerlink" title="1.异步复制"></a>1.异步复制</h5><h6 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1.环境配置"></a>1.环境配置</h6><p>更改/etc/下my.cnf文件，在其[mysqld]段下加入相应代码</p><figure class="highlight abnf"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">server-id</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span><br><span class="hljs-attribute">log-bin</span> <span class="hljs-operator">=</span> mysql-bin<br></code></pre></td></tr></table></figure><p>开启二进制日志，并指定服务id,该id本次为主库</p><p>修改完后重启服务</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">service mysql restart</span><br></code></pre></td></tr></table></figure><h6 id="2-创建从库专用用户"><a href="#2-创建从库专用用户" class="headerlink" title="2.创建从库专用用户"></a>2.创建从库专用用户</h6><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> <span class="hljs-string">&#x27;a&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> identified  <span class="hljs-keyword">by</span> <span class="hljs-string">&#x27;123456&#x27;</span>;<br><span class="hljs-keyword">grant</span> <span class="hljs-keyword">replication</span> slave <span class="hljs-keyword">on</span> *.* <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;a&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">show <span class="hljs-keyword">master</span> <span class="hljs-title">status</span>;<br></code></pre></td></tr></table></figure><p><img src="9.20.1.png" alt="9.20.1"></p><h6 id="3-将从库与主库连接，启动复制"><a href="#3-将从库与主库连接，启动复制" class="headerlink" title="3.将从库与主库连接，启动复制"></a>3.将从库与主库连接，启动复制</h6><p>在从库上执行change master to,指定主库位置以及建立的专用用户</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">change master <span class="hljs-keyword">to</span><br>master_host = <span class="hljs-string">&#x27;192.168.148.138&#x27;</span>,<br><span class="hljs-attribute">master_user</span>=<span class="hljs-string">&#x27;a&#x27;</span>,<br><span class="hljs-attribute">master_password</span>=<span class="hljs-string">&#x27;123456&#x27;</span>,<br><span class="hljs-attribute">master_log_file</span>=<span class="hljs-string">&#x27;mysql-bin.000001&#x27;</span>,<br><span class="hljs-attribute">master_log_pos</span>=833;<br></code></pre></td></tr></table></figure><p><img src="9.20.2.png" alt="9.20.2"></p><p>开启slave服务，确认情况</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> <span class="hljs-literal">slave</span>;<br></code></pre></td></tr></table></figure><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs maxima"><span class="hljs-built_in">show</span> slave <span class="hljs-built_in">status</span>\G<br></code></pre></td></tr></table></figure><p><img src="9.20.3.png" alt="9.20.3"></p><h5 id="2-半同步复制"><a href="#2-半同步复制" class="headerlink" title="2.半同步复制"></a>2.半同步复制</h5><p>mysql的半同步复制依靠于Semi-sync插件，在加载完后每一个事务需等待从库接收日志后才返回给主库。而其在备库超时后，会自动降级为异步复制，该复制主要是为了保证数据的一致性。</p><h6 id="1-安装semi-sync插件"><a href="#1-安装semi-sync插件" class="headerlink" title="1.安装semi-sync插件"></a>1.安装semi-sync插件</h6><p>主库安装</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">install</span> plugin rpl_semi_sync_master soname <span class="hljs-string">&#x27;semisync_master.so&#x27;</span>;<br></code></pre></td></tr></table></figure><p>临时启动</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> global <span class="hljs-attribute">rpl_semi_sync_master_enabled</span>=ON;<br></code></pre></td></tr></table></figure><p>从库安装</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">install</span> plugin rpl_semi_sync_slave soname <span class="hljs-string">&#x27;semisync_slave.so&#x27;</span>;<br></code></pre></td></tr></table></figure><p>临时启动</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">set</span> global <span class="hljs-attribute">rpl_semi_sync_slave_enabled</span>=ON;<br></code></pre></td></tr></table></figure><p>设置完后，重新启动IO</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">stop</span> <span class="hljs-literal">slave</span> io_thread;<br></code></pre></td></tr></table></figure><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">start</span> <span class="hljs-literal">slave</span> io_thread;<br></code></pre></td></tr></table></figure><p>确认半同步是否运行</p><p>主库：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">global</span> status <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%rpl_semi%&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="9.20.4.png" alt="9.20.4"></p><p>从库：</p><p><img src="9.20.5.png" alt="9.20.5"></p><h6 id="2-测试"><a href="#2-测试" class="headerlink" title="2.测试"></a>2.测试</h6><p>关闭从库节点</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-literal">stop</span> <span class="hljs-literal">slave</span> io_thread;<br></code></pre></td></tr></table></figure><p>主库新加一个数据库</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> a;<br></code></pre></td></tr></table></figure><p>确认同步情况</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">show</span> <span class="hljs-keyword">global</span> status <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%rpl_semi%&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="9.20.6.png" alt="9.20.6"></p><h3 id="2-redis"><a href="#2-redis" class="headerlink" title="2.redis"></a><strong>2.redis</strong></h3><p>Redis 是一个高性能的key-value数据库，可以用来做数据库、缓存等场景，是一种NoSQL的数据库。其通常将全部的数据存储在内存中，支持主从同步。数据可以从主服务器向任意数量的从服务器上同步，执行效率也较高。</p><h5 id="1-redis安装"><a href="#1-redis安装" class="headerlink" title="1.redis安装"></a>1.redis安装</h5><p>一般可以直接指令安装或编译安装</p><h6 id="1-1指令安装"><a href="#1-1指令安装" class="headerlink" title="1.1指令安装"></a>1.1指令安装</h6><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> redis<br></code></pre></td></tr></table></figure><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">redis-<span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">redis-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p><img src="9.20.7.png" alt="9.20.7"></p><h6 id="1-2编译安装"><a href="#1-2编译安装" class="headerlink" title="1.2编译安装"></a>1.2编译安装</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/redis/</span>redis<span class="hljs-regexp">/archive/</span><span class="hljs-number">7.2</span>.<span class="hljs-number">1</span>.tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -xzf redis-<span class="hljs-number">7</span>.<span class="hljs-number">2</span>.<span class="hljs-number">1</span>.tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/src/</span>redis-<span class="hljs-number">7.2</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/usr/</span>local/redis<br></code></pre></td></tr></table></figure><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">make PREFIX=<span class="hljs-regexp">/usr/</span>local/redis install<br></code></pre></td></tr></table></figure><p><img src="9.20.8.png" alt="9.20.8"></p><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">redis-<span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p><img src="9.20.9.png" alt="9.20.9"></p><p>确定可以启动</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>9.19</title>
    <link href="/2023/09/19/9.19/"/>
    <url>/2023/09/19/9.19/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><span id="more"></span><h3 id="1-mysql"><a href="#1-mysql" class="headerlink" title="1.mysql"></a><strong>1.mysql</strong></h3><h4 id="2-登录"><a href="#2-登录" class="headerlink" title="2.登录"></a>2.登录</h4><h5 id="1-登录数据库服务器"><a href="#1-登录数据库服务器" class="headerlink" title="1.登录数据库服务器"></a>1.登录数据库服务器</h5><p>以5.7.9版本为例，一般而言，root密码在log-error文件中</p><figure class="highlight gradle"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs gradle">cat <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span><span class="hljs-regexp">/logs/my</span>sql.err |<span class="hljs-keyword">grep</span> password<br></code></pre></td></tr></table></figure><p><img src="9.19.1.png" alt="9.19.1"></p><p>准备登录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/mysql -uroot -p -S /</span>tmp/mysql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span>.sock<br></code></pre></td></tr></table></figure><p>./mysql: error while loading shared libraries: libncurses.so.5: cannot open shared object file: No such file or directory</p><p>缺少缺少 libncurses.so.5 这个依赖</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y libncurses*<br></code></pre></td></tr></table></figure><p>再次尝试可以登录了</p><p><img src="9.19.2.png" alt="9.19.2"></p><p><img src="9.19.3.png" alt="9.19.3"></p><p>修改root登录密码</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span> <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span>=<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;123456&#x27;</span>);<br></code></pre></td></tr></table></figure><p>开启远程登录权限</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript"><span class="hljs-keyword">use</span> mysql<br></code></pre></td></tr></table></figure><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> host = <span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span>;<br></code></pre></td></tr></table></figure><p>通配符%指定所有 ip 都能访问，</p><p><img src="9.19.4.png" alt="9.19.4"></p><p>建议软连接</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span><span class="hljs-regexp">/bin/my</span>sql <span class="hljs-regexp">/usr/</span>local/mysql<br></code></pre></td></tr></table></figure><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">export <span class="hljs-title class_">PATH</span>=<span class="hljs-variable">$PATH</span><span class="hljs-symbol">:/usr/local/mysql/mysql-</span><span class="hljs-number">5.7</span>.<span class="hljs-number">9</span>/bin/<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mysql</span> -u root -p -S /tmp/mysql-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">9</span>.sock<br></code></pre></td></tr></table></figure><p>可以在任意位置以上述代码登录</p><p><img src="9.19.5.png" alt="9.19.5"></p><h4 id="3-常用mysql语句"><a href="#3-常用mysql语句" class="headerlink" title="3.常用mysql语句"></a>3.常用mysql语句</h4><h6 id="1-新建1个账户，使其能在任意远程主机连接"><a href="#1-新建1个账户，使其能在任意远程主机连接" class="headerlink" title="1.新建1个账户，使其能在任意远程主机连接"></a>1.新建1个账户，使其能在任意远程主机连接</h6><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">create use<span class="hljs-string">r&#x27;lin&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>identified by<span class="hljs-string">&#x27;123456&#x27;</span>;<br></code></pre></td></tr></table></figure><p>查看是否成功</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>,host <span class="hljs-keyword">from</span> mysql.<span class="hljs-keyword">user</span>;<br></code></pre></td></tr></table></figure><p><img src="9.19.6.png" alt="9.19.6"></p><p><img src="9.19.7.png" alt="9.19.7"></p><h6 id="2-给用户授权"><a href="#2-给用户授权" class="headerlink" title="2.给用户授权"></a>2.给用户授权</h6><p>以上述创建完用户为例，给他一个查询mybase数据库中message表的权限</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">grant</span> <span class="hljs-keyword">select</span> <span class="hljs-keyword">on</span> mybase.message <span class="hljs-keyword">to</span> &quot;lin&quot;@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><p>ERROR 1146 (42S02): Table ‘mybase.message’ doesn’t exist</p><p>创建mybase数据库下的message表,再次尝试</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">show databases<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> mybase;<br></code></pre></td></tr></table></figure><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf">use mybase<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><figure class="highlight sas"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs sas"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">message</span><br>(<br>……<br>……<br>……<br>）；<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">grant</span> <span class="hljs-keyword">select</span> <span class="hljs-keyword">on</span> mybase.message <span class="hljs-keyword">to</span> &quot;lin&quot;@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dart"><span class="hljs-keyword">show</span> grants <span class="hljs-keyword">for</span> <span class="hljs-string">&#x27;lin&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><p>查看是否给与权限</p><p><img src="9.19.8.png" alt="9.19.8"></p><p><img src="9.19.9.png" alt="9.19.9"></p><h6 id="3-增加删减权限"><a href="#3-增加删减权限" class="headerlink" title="3.增加删减权限"></a>3.增加删减权限</h6><p>给lin用户修改和查看视图message表权限</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">grant</span> <span class="hljs-keyword">update</span>,<span class="hljs-keyword">show</span> <span class="hljs-keyword">view</span> <span class="hljs-keyword">on</span> mybase.message <span class="hljs-keyword">to</span> &quot;lin&quot;@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="9.19.10.png" alt="9.19.10"></p><p>撤销他的修改权限</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">revoke</span> <span class="hljs-keyword">update</span> <span class="hljs-keyword">on</span> mybase.message <span class="hljs-keyword">from</span> &quot;lin&quot;@<span class="hljs-string">&#x27;%&#x27;</span>;<br></code></pre></td></tr></table></figure><p><img src="9.19.11.png" alt="9.19.11"></p><h6 id="4-删除，锁定用户"><a href="#4-删除，锁定用户" class="headerlink" title="4.删除，锁定用户"></a>4.删除，锁定用户</h6><p>删除lin用户</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">drop <span class="hljs-keyword">user</span> <span class="hljs-title">lin</span>@&#x27;%&#x27;;<br></code></pre></td></tr></table></figure><p><img src="9.19.12.png" alt="9.19.12"></p><p>删除一般不常用，常用锁定</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">alter use<span class="hljs-string">r&#x27;lin&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> account lock;<br></code></pre></td></tr></table></figure><p>可通过</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>, host, account_locked <span class="hljs-keyword">from</span> mysql.<span class="hljs-keyword">user</span>;<br></code></pre></td></tr></table></figure><p>查看情况</p><p><img src="9.19.13.png" alt="9.19.13"></p><p>解锁则为</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">alter use<span class="hljs-string">r&#x27;lin&#x27;</span>@<span class="hljs-string">&#x27;%&#x27;</span> account unlock;<br></code></pre></td></tr></table></figure><p><img src="9.19.14.png" alt="9.19.14"></p><h5 id><a href="#" class="headerlink" title></a></h5>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>9.18</title>
    <link href="/2023/09/18/9.18/"/>
    <url>/2023/09/18/9.18/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><span id="more"></span><h3 id="1-nat转发-2个网卡连接到单内网网卡，从而连接"><a href="#1-nat转发-2个网卡连接到单内网网卡，从而连接" class="headerlink" title="1.nat转发 2个网卡连接到单内网网卡，从而连接"></a><strong>1.nat转发 2个网卡连接到单内网网卡，从而连接</strong></h3><h5 id="1-添加一块网卡并开启网卡转发"><a href="#1-添加一块网卡并开启网卡转发" class="headerlink" title="1.添加一块网卡并开启网卡转发"></a>1.添加一块网卡并开启网卡转发</h5><figure class="highlight ebnf"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ifconfig</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/proc/</span>sys<span class="hljs-regexp">/net/i</span>pv4/ip_forward<br></code></pre></td></tr></table></figure><p>确认网卡转发未开启，修改 /etc/sysctl.conf下参数</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">net.ipv4.ip_forward</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>重启服务确认</p><p><img src="9.18.1.png" alt="9.18.1"></p><p><img src="9.18.2.png" alt="9.18.2"></p><p>将另外一个虚拟机的网关改为之前设定好的内网网卡id，并重启服务</p><p><img src="9.18.3.png" alt="9.18.3"></p><p>确认情况，可以ping通网关，但不能ping通外网</p><p><img src="9.18.4.png" alt="9.18.4"></p><h5 id="2-iptables-转发"><a href="#2-iptables-转发" class="headerlink" title="2.iptables 转发"></a>2.iptables 转发</h5><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">iptables -L -t nat</span><br></code></pre></td></tr></table></figure><p>确认规则后</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">iptables -t nat -<span class="hljs-keyword">A</span> POSTROUTING -s <span class="hljs-number">192.168.214.100</span> -j MASQUERADE<br></code></pre></td></tr></table></figure><p>即对192.168.214.100该ip进行伪装</p><p><img src="9.18.5.png" alt="9.18.5"></p><p>对第二台机器重新ping百度，可以发现已经成功</p><p><img src="9.18.6.png" alt="9.18.6"></p><p>可以将规则保存在/etc/sysconfig/iptables下</p><h3 id="2-mysql"><a href="#2-mysql" class="headerlink" title="2.mysql"></a><strong>2.mysql</strong></h3><h5 id="1-不同版本安装"><a href="#1-不同版本安装" class="headerlink" title="1.不同版本安装"></a>1.不同版本安装</h5><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>downloads.mysql.com<span class="hljs-regexp">/archives/g</span>et<span class="hljs-regexp">/p/</span><span class="hljs-number">23</span><span class="hljs-regexp">/file/my</span>sql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span>-linux-glibc2.<span class="hljs-number">5</span>-x86_64.tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>downloads.mysql.com<span class="hljs-regexp">/archives/g</span>et<span class="hljs-regexp">/p/</span><span class="hljs-number">23</span><span class="hljs-regexp">/file/my</span>sql-<span class="hljs-number">8.0</span>.<span class="hljs-number">33</span>-linux-glibc2.<span class="hljs-number">28</span>-x86_64.tar.gz<br></code></pre></td></tr></table></figure><p><img src="9.18.7.png" alt="9.18.7"></p><p>指定解压到某目录，并重命名</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zxvf  mysql-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">33</span>-linux-glibc2.<span class="hljs-number">28</span>-x86_64.tar.gz -C /usr/local/mysql<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zxvf  mysql-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">9</span>-linux-glibc2.<span class="hljs-number">5</span>-x86_64.tar.gz -C /usr/local/mysql<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mv</span> mysql-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">9</span>-linux-glibc2.<span class="hljs-number">5</span>-x86_64 mysql-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">mv</span> mysql-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">33</span>-linux-glibc2.<span class="hljs-number">28</span>-x86_64 mysql-<span class="hljs-number">8</span>.<span class="hljs-number">0</span>.<span class="hljs-number">33</span><br></code></pre></td></tr></table></figure><p><img src="9.18.8.png" alt="9.18.8"></p><p>配置my.cnf文件</p><p>以8033版本为例</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs gradle">[mysqld]<br>port=<span class="hljs-number">3380</span><br>user=mysql<br>basedir=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">8.0</span>.<span class="hljs-number">33</span><br>data=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sq8033/data<br>socket=<span class="hljs-regexp">/tmp/my</span>sq8033.sock<br>log-error=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sq8033/mysql.err<br>pid-<span class="hljs-keyword">file</span>=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sq8033/mysql.pid<br>character set server=utf8mb4<br>lower <span class="hljs-keyword">case</span> table names=<span class="hljs-number">1</span><br><br>[mysqld_safe]<br>log-error=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sq8033<span class="hljs-regexp">/logs/my</span>sql.err<br>pid-<span class="hljs-keyword">file</span>=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sq8033/mysql.pid<br>tmpdir=<span class="hljs-regexp">/tmp/my</span>sq8033<br></code></pre></td></tr></table></figure><p>5.7.9同理</p><p>再进行service文件配置</p><p>以8033为例</p><p>进行软链接</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">8.0</span>.<span class="hljs-number">33</span><span class="hljs-regexp">/support-files/my</span>sql.server<br></code></pre></td></tr></table></figure><p><img src="9.18.9.png" alt="9.18.9"></p><p><img src="9.18.10.png" alt="9.18.10"></p><p><img src="9.18.11.png" alt="9.18.11"></p><p>将2个版本的mysql.server复制到/etc/init.d/下</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span><span class="hljs-regexp">/support-files/my</span>sql.server <span class="hljs-regexp">/etc/i</span>nit.d/mysq579<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">8.0</span>.<span class="hljs-number">33</span><span class="hljs-regexp">/support-files/my</span>sql.server <span class="hljs-regexp">/etc/i</span>nit.d/mysq8033<br></code></pre></td></tr></table></figure><p><img src="9.18.12.png" alt="9.18.12"></p><p>创建用户并改变所有者</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">groupadd mysql</span><br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">useradd -r -g mysql mysql</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chown -R mysql.mysql <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chown -R mysql.mysql <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">8.0</span>.<span class="hljs-number">33</span><br></code></pre></td></tr></table></figure><p><img src="9.18.13.png" alt="9.18.13"></p><p>初始化数据库</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/mysqld --defaults-file=/u</span>sr<span class="hljs-regexp">/local/my</span>sql<span class="hljs-regexp">/mysql-5.7.9/my</span>.cnf --basedir=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span> --datadir=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span>/data --user=mysql --initialize<br></code></pre></td></tr></table></figure><p><img src="9.18.14.png" alt="9.18.14"></p><p>ll 确认权限情况，并将data改为mysql属组</p><p>再次初始化数据库</p><p>Starting MySQL. ERROR! The server quit without updating PID file (/usr/local/mysql/mysql-5.7.9/mysql.pid).</p><p>排查发现，因为mysql文件夹里无logs文件夹</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">mkdir logs<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">chown -R mysql.mysql <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span>/log<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">rm -rf <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">5.7</span>.<span class="hljs-number">9</span><span class="hljs-regexp">/data/</span>*<br></code></pre></td></tr></table></figure><p>重复上面代码</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">service</span> mysql-<span class="hljs-number">5</span>.<span class="hljs-number">7</span>.<span class="hljs-number">9</span> start<br></code></pre></td></tr></table></figure><p>8.0.33版本同样以该方法安装</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/mysqld --user=mysql  --lower-case-table-names=1 --basedir=/u</span>sr<span class="hljs-regexp">/local/my</span>sql<span class="hljs-regexp">/mysql-5.7.9 --datadir=/u</span>sr<span class="hljs-regexp">/local/my</span>sql<span class="hljs-regexp">/mysql-5.7.9/</span>data/ --initialize<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/mysqld --defaults-file=/u</span>sr<span class="hljs-regexp">/local/my</span>sql<span class="hljs-regexp">/mysql-8.0.33/my</span>.cnf --basedir=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">8.0</span>.<span class="hljs-number">33</span> --datadir=<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/mysql/my</span>sql-<span class="hljs-number">8.0</span>.<span class="hljs-number">33</span>/data --user=mysql --initialize<br></code></pre></td></tr></table></figure><p><img src="9.18.15.png" alt="9.18.15"></p><p><img src="9.18.16.png" alt="9.18.16"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>9.15</title>
    <link href="/2023/09/15/9-15/"/>
    <url>/2023/09/15/9-15/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="9-14"><a href="#9-14" class="headerlink" title="9.14"></a>9.14</h1><p><strong><span id="more"></span></strong></p><h2 id="1-搭建1个DNS服务，可解析"><a href="#1-搭建1个DNS服务，可解析" class="headerlink" title="1.搭建1个DNS服务，可解析"></a><strong>1.搭建1个DNS服务，可解析</strong></h2><p><strong>一般使用阿里云（223.5.5.5）或者腾讯（119.29.29.29）公共dns,本次搭建1个dns服务</strong></p><h4 id="1-下载bind和相关工具，查看相关配置文件位置"><a href="#1-下载bind和相关工具，查看相关配置文件位置" class="headerlink" title="1.下载bind和相关工具，查看相关配置文件位置"></a><strong>1.下载bind和相关工具，查看相关配置文件位置</strong></h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs mipsasm">yum <span class="hljs-keyword">install </span>-y <span class="hljs-keyword">bind </span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -qc <span class="hljs-built_in">bind</span><br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">systemctl <span class="hljs-built_in">enable</span> named<br></code></pre></td></tr></table></figure><p><strong><img src="9.15.1.png" alt="9.15.1"></strong></p><h4 id="2-修改相关配置文件"><a href="#2-修改相关配置文件" class="headerlink" title="2.修改相关配置文件"></a><strong>2.修改相关配置文件</strong></h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>named.conf<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>named.rfc1912.zones<br></code></pre></td></tr></table></figure><p><strong><img src="9.15.3.png" alt="9.15.2"></strong></p><p><strong><img src="9.15.3.png" alt="9.15.3"></strong></p><p><strong>备份并配置区域文件</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cd <span class="hljs-regexp">/var/</span>named<br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">cp</span> named.localhost abclocal.<span class="hljs-keyword">com</span><br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> abclocal.<span class="hljs-keyword">com</span><br></code></pre></td></tr></table></figure><p><strong>修改完后保存退出</strong></p><p><strong><img src="9.15.4.png" alt="9.15.4"></strong></p><p><strong>修改nameserver再确认</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>resolv.conf<br></code></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">nslookup</span> abclocal.com<br></code></pre></td></tr></table></figure><p><strong>报错：;; connection timed out; no servers could be reached</strong></p><p><strong>检查情况</strong></p><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs fortran">systemctl <span class="hljs-keyword">status</span> <span class="hljs-keyword">named</span>.service<br></code></pre></td></tr></table></figure><p><strong><img src="9.15.5.png" alt="9.15.5"></strong></p><p><strong>重新修改  /var/named下文件后测试</strong></p><p><strong><img src="9.15.6.png" alt="9.15.6"></strong></p><p><strong>报错servfail</strong></p><p><strong>排查问题</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">named-checkconf</span><br></code></pre></td></tr></table></figure><p><strong>无报错，继续排查</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ll</span><br></code></pre></td></tr></table></figure><p><strong>发现自己配置库文件属组为root</strong></p><p><strong><img src="9.15.7.png" alt="9.15.7"></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chgrp</span> named abclocal.com<br></code></pre></td></tr></table></figure><p><strong><img src="9.15.8.png" alt="9.15.8"></strong></p><p><strong>重启服务再次确认，可以解析服务</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart named</span><br></code></pre></td></tr></table></figure><p><strong><img src="9.15.9.png" alt="9.15.9"></strong></p><h2 id="2-iptables"><a href="#2-iptables" class="headerlink" title="2.iptables"></a><strong>2.iptables</strong></h2><h3 id="1-限制某单个ip访问单个端口-放行ss端口"><a href="#1-限制某单个ip访问单个端口-放行ss端口" class="headerlink" title="1.限制某单个ip访问单个端口 放行ss端口"></a><strong>1.限制某单个ip访问单个端口 放行ss端口</strong></h3><p><strong>iptables是一款数据包过滤和nat管理工具，一般而言有5表5链</strong></p><p><strong>常用命令：</strong><br><strong>-A 追加规则–&gt;iptables -A INPUT</strong><br><strong>-D 删除规则–&gt;iptables -D INPUT 1(编号)</strong><br><strong>-R 修改规则–&gt;iptables -R INPUT 1 -s 192.168.12.0 -j DROP 取代现行规则，顺序不变(1是位置)</strong><br><strong>-I 插入规则–&gt;iptables -I INPUT 1 –dport 80 -j ACCEPT 插入一条规则，原本位置上的规则将会往后移动一个顺位</strong><br><strong>-L 查看规则–&gt;iptables -L INPUT 列出规则链中的所有规则</strong><br><strong>-N 新的规则–&gt;iptables -N allowed 定义新的规则</strong></p><p><strong>通用参数：</strong><br><strong>-p 协议 例：iptables -A INPUT -p tcp</strong><br><strong>-s源地址 例：iptables -A INPUT -s 192.168.1.1</strong><br><strong>-d目的地址 例：iptables -A INPUT -d 192.168.12.1</strong><br><strong>-sport源端口 例:iptables -A INPUT -p tcp –sport 22</strong><br><strong>-dport目的端口 例:iptables -A INPUT -p tcp –dport 22</strong><br><strong>-i指定入口网卡 例:iptables -A INPUT -i eth0</strong><br><strong>-o指定出口网卡 例:iptables -A FORWARD -o eth0</strong><br><strong>-j指定之后动作 如 -j accept -j reject -j drop等</strong></p><h4 id="1-限制ip访问指定端口"><a href="#1-限制ip访问指定端口" class="headerlink" title="1.限制ip访问指定端口"></a><strong>1.限制ip访问指定端口</strong></h4><p><strong>确认当前filter表情况</strong></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">iptables -L</span><br></code></pre></td></tr></table></figure><p><strong>禁止192.168.148.133ip访问1000端口</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -<span class="hljs-selector-tag">I</span> <span class="hljs-selector-tag">INPUT</span> -<span class="hljs-selector-tag">p</span> tcp -s <span class="hljs-number">192.168</span>.<span class="hljs-number">148.133</span> <span class="hljs-attr">--dport</span> <span class="hljs-number">1000</span> -j REJECT<br></code></pre></td></tr></table></figure><p><strong><img src="9.15.10.png" alt="9.15.10"></strong></p><h4 id="2-放行ss端口"><a href="#2-放行ss端口" class="headerlink" title="2.放行ss端口"></a><strong>2.放行ss端口</strong></h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">iptables -<span class="hljs-selector-tag">I</span> <span class="hljs-selector-tag">INPUT</span> -<span class="hljs-selector-tag">p</span> tcp -s <span class="hljs-number">192.168</span>.<span class="hljs-number">148.133</span> <span class="hljs-attr">--dport</span> <span class="hljs-number">22</span> -j ACCEPT<br></code></pre></td></tr></table></figure><p><strong><img src="9.15.11.png" alt="9.15.11"></strong></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>9.14</title>
    <link href="/2023/09/14/9.14/"/>
    <url>/2023/09/14/9.14/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><span id="more"></span><h2 id="1-OSI-7层模型-分别用途协议"><a href="#1-OSI-7层模型-分别用途协议" class="headerlink" title="1.OSI 7层模型 分别用途协议"></a>1.OSI 7层模型 分别用途协议</h2><p>OSI 模型把网络通信的工作分为 7 层，分别是物理层、数据链路层、网络层、传输层、会话层、表示层和应用层。</p><p>物理层:OSI模型最底层，为上层提供一个物理传输载体，以比特流数据传输</p><p>数据链路层：起到2个网络设备互相进行网络通讯功能，负责物理网络寻址（MAC）和纠错</p><p>网络层：用于将接收到的数据段从一台计算机传输到不同网络中的另一台计算机，根据地址决定数据的路径选择</p><p>传输层： 为上层协议提供端到端的可靠和透明的数据传输服务</p><p>会话层：为会话实体间创建连接，提供节点之间通信过程的协调 ，同步数据流</p><p>表示层：提供数据格式、变换和编码转换 </p><p>应用层 ：是计算机用户，以及各种应用程序和网络之间的接口，其功能是直接向用户提供服务，协调各个应用程序之间的工作。</p><p><img src="9.14.1.png" alt="9.14.1"></p><h2 id="2-子网掩码-地址计算"><a href="#2-子网掩码-地址计算" class="headerlink" title="2.子网掩码 地址计算"></a>2.子网掩码 地址计算</h2><p>IP由网络ID和主机ID组成</p><p>网络ID用于标识网络地址</p><p>主机ID用于标识主机</p><p>IP分类：主要用ABC类地址</p><p>网络数：2^可变网络ID数</p><p>主机数：2^主机ID位数-2(去除子网中的第一个表示子网号的IP地址和最后一个表示广播地址的IP地址)</p><h3 id="1-私有网络"><a href="#1-私有网络" class="headerlink" title="1.私有网络"></a>1.私有网络</h3><h4 id="1-A类"><a href="#1-A类" class="headerlink" title="1.A类"></a>1.A类</h4><p>8位网络号+24位主机号组成</p><p>range(1-126),目前保留地址10.0.0.0~10.255.255.255</p><p>127为回环地址</p><p>网络数2^(8-1)</p><p>一个a类网络最多主机数 2^24-2=16777214</p><figure class="highlight apache"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span> <span class="hljs-number">2</span>^<span class="hljs-number">24</span>-<span class="hljs-number">2</span>|bc<br></code></pre></td></tr></table></figure><h4 id="2-B类"><a href="#2-B类" class="headerlink" title="2.B类"></a>2.B类</h4><p>16位网络号+16位主机号组成</p><p>range(128-191)</p><p>网络数2^(16-2)</p><p>一个B类网络最多主机数 2^16 -2=65534</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span> <span class="hljs-number">2</span>^<span class="hljs-number">16</span>-<span class="hljs-number">2</span>|bc<br></code></pre></td></tr></table></figure><h4 id="3-C类"><a href="#3-C类" class="headerlink" title="3.C类"></a>3.C类</h4><p>24位网络号+8位主机号</p><p>range（192-223）</p><p>网络数2^(24-3)</p><p>一个C类网络最多主机数 2^8 -2=254</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">echo</span> <span class="hljs-number">2</span>^<span class="hljs-number">8</span>-<span class="hljs-number">2</span>|bc<br></code></pre></td></tr></table></figure><h3 id="2-子网掩码"><a href="#2-子网掩码" class="headerlink" title="2.子网掩码"></a>2.子网掩码</h3><p>CIDR ：IP/网络ID位数</p><p>netmask子网掩码：标识网络ID位数，是32位的二进制，对应于网络ID的位为1，对应于主机ID的为0 （需转成10进制）</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">00000000 </span><span class="hljs-number">0</span><br><span class="hljs-symbol">10000000 </span><span class="hljs-number">128</span><br><span class="hljs-symbol">11000000 </span><span class="hljs-number">192</span><br><span class="hljs-symbol">11100000 </span><span class="hljs-number">224</span><br><span class="hljs-symbol">11110000 </span><span class="hljs-number">240</span><br><span class="hljs-symbol">11111000 </span><span class="hljs-number">248</span><br><span class="hljs-symbol">11111100 </span><span class="hljs-number">252</span><br><span class="hljs-symbol">11111110 </span><span class="hljs-number">254</span><br><span class="hljs-symbol">11111111 </span><span class="hljs-number">255</span><br></code></pre></td></tr></table></figure><p>举例1：以201.224.192.144/23 计算该主机所在网络主机数，子网掩码</p><p>主机数=2^(32-23)-2=510</p><p>子网掩码：11111111.11111111.11111110.00000000</p><p>​                    255.255.254.0</p><p>例2： 192.168.222.200 子网掩码255.255.240.0列出CIDR网络位数，主机数</p><p>CIDR：192.168.222.200/20</p><p>主机数： 2^(32-20)-2=4094</p><h3 id="3-网络ID"><a href="#3-网络ID" class="headerlink" title="3.网络ID"></a>3.网络ID</h3><p>网络ID为IP与子网掩码相与</p><p>与运算</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">0</span>与<span class="hljs-number">0</span>=<span class="hljs-number">0</span><br><span class="hljs-attribute">0</span>与<span class="hljs-number">1</span>=<span class="hljs-number">0</span><br><span class="hljs-attribute">1</span>与<span class="hljs-number">0</span>=<span class="hljs-number">0</span><br><span class="hljs-attribute">1</span>与<span class="hljs-number">1</span>=<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>任何数与0都为0，与1保留原值</p><p>例3：以201.224.192.144 子网掩码 255.255.254.0计算网络ID</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs 1c">echo <span class="hljs-string">&quot;obase=2;201&quot;</span> <span class="hljs-string">|bc</span><br>echo <span class="hljs-string">&quot;obase=2;224&quot;</span> <span class="hljs-string">|bc</span><br>echo <span class="hljs-string">&quot;obase=2;192&quot;</span> <span class="hljs-string">|bc</span><br>echo <span class="hljs-string">&quot;obase=2;144&quot;</span> <span class="hljs-string">|bc</span><br></code></pre></td></tr></table></figure><p>11001001.11100000.11000000.10010000</p><p>11111111.11111111.11111110.00000000</p><p>网络ID即为：</p><p>11001001.11100000.11000000.0000000</p><p>转换十进制</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c">echo <span class="hljs-string">&quot;obase=10;ibase=2;11001001&quot;</span> <span class="hljs-string">| bc</span><br>echo <span class="hljs-string">&quot;obase=10;ibase=2;11100000&quot;</span> <span class="hljs-string">| bc</span><br>echo <span class="hljs-string">&quot;obase=10;ibase=2;11000000&quot;</span> <span class="hljs-string">| bc</span><br></code></pre></td></tr></table></figure><p>得到网络ID：201.224.192.0</p><p>广播地址为x.x.x.最大主机数+1</p><h3 id="4-判断是否在同一网段"><a href="#4-判断是否在同一网段" class="headerlink" title="4.判断是否在同一网段"></a>4.判断是否在同一网段</h3><p>以A,B为例</p><p>A：192.168.114.2/23   1110010 .00000001</p><p>B：192.168.115.241/29</p><p>如果A访问B，则</p><p>A与自己子网掩码相与 得到192.168.114.0</p><p>B与A子网掩码相与192.168.114.0</p><p>同一网段</p><p>B访问A，</p><p>则B与自己子网掩码相与，得到192.168.115.240</p><p>A与B子网掩码相与，得到 192.168.114.0</p><p>不在同一网段</p><h2 id="3-网卡绑定-2个配ip"><a href="#3-网卡绑定-2个配ip" class="headerlink" title="3.网卡绑定 2个配ip"></a>3.网卡绑定 2个配ip</h2><h3 id="网卡配2个ip"><a href="#网卡配2个ip" class="headerlink" title="网卡配2个ip"></a>网卡配2个ip</h3><p>添加1个网卡，重启确认运行情况</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nmcli device</span><br></code></pre></td></tr></table></figure><p><img src="9.14.3.png" alt="9.14.3"></p><p>关闭第一张网卡</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">nmcli <span class="hljs-keyword">c</span> down ens<span class="hljs-number">33</span><br></code></pre></td></tr></table></figure><p>加载模块并确定情况</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">modprobe bonding</span><br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">modinfo bonding</span><br></code></pre></td></tr></table></figure><p><img src="9.14.4.png" alt="9.14.4"></p><p>创建绑定接口文件ifcfg-bond0</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/network-scripts/i</span>fcfg-bond0<br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">DEVICE</span>=bond0<br><span class="hljs-attr">TYPE</span>=Bond<br><span class="hljs-attr">NAME</span>=bond0<br><span class="hljs-attr">BONDING_MASTER</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">BOOTPROTO</span>=none<br><span class="hljs-attr">ONBOOT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">IPADDR</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">148.131</span><br><span class="hljs-attr">NETMASK</span>=<span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span><br><span class="hljs-attr">GATEWAY</span>=<span class="hljs-number">192.168</span>.<span class="hljs-number">148.1</span><br><span class="hljs-attr">BONDING_OPTS</span>=<span class="hljs-string">&quot;mode=0 miimon=100&quot;</span><br></code></pre></td></tr></table></figure><p>为测试bond是否成功，本次测试mode0</p><p>修改2个网卡文件</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">TYPE</span>=Ethernet<br><span class="hljs-attr">BOOTPROTO</span>=none<br><span class="hljs-attr">DEVICE</span>=ens37<br><span class="hljs-attr">ONBOOT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">HWADDR</span>=”MAC from the ifconfig command”<br><span class="hljs-attr">MASTER</span>=bond0<br><span class="hljs-attr">SLAVE</span>=<span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">TYPE</span>=Ethernet<br><span class="hljs-attr">BOOTPROTO</span>=none<br><span class="hljs-attr">DEVICE</span>=ens33<br><span class="hljs-attr">ONBOOT</span>=<span class="hljs-literal">yes</span><br><span class="hljs-attr">HWADDR</span>=”MAC from the ifconfig command”<br><span class="hljs-attr">MASTER</span>=bond0<br><span class="hljs-attr">SLAVE</span>=<span class="hljs-literal">yes</span><br></code></pre></td></tr></table></figure><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nmcli c reload</span><br></code></pre></td></tr></table></figure><p>再次确认情况</p><p><img src="9.14.5.png" alt="9.14.5"></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">nmcli device</span><br></code></pre></td></tr></table></figure><p><img src="9.14.6.png" alt="9.14.6"></p><p>测试端口速度情况</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">ethtool bond0 <span class="hljs-string">|grep Speed</span><br></code></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">ethtool ens33 <span class="hljs-string">|grep Speed</span><br></code></pre></td></tr></table></figure><p><img src="9.14.7.png" alt="9.14.7"></p><p>测试主从备份是否成功</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/proc/</span>net<span class="hljs-regexp">/bonding/</span>bond0<br></code></pre></td></tr></table></figure><p><img src="9.14.8.png" alt="9.14.8"></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">ifconfig -s</span><br></code></pre></td></tr></table></figure><p>确认端口情况</p><p><img src="9.14.9.png" alt="9.14.9"></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ifconfig</span> down ens33<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cat <span class="hljs-regexp">/proc/</span>net<span class="hljs-regexp">/bonding/</span>bond0<br></code></pre></td></tr></table></figure><p><img src="9.14.10.png" alt="9.14.10"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>9.13</title>
    <link href="/2023/09/13/9.13/"/>
    <url>/2023/09/13/9.13/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><span id="more"></span><h2 id="1-lvm-lv扩容"><a href="#1-lvm-lv扩容" class="headerlink" title="1.lvm lv扩容"></a>1.lvm lv扩容</h2><p>逻辑卷</p><p>由物理卷-卷组-逻辑卷从前到后</p><ol><li><h3 id="创建1个逻辑卷"><a href="#创建1个逻辑卷" class="headerlink" title="创建1个逻辑卷"></a>创建1个逻辑卷</h3><ol><li><h4 id="新加硬盘分区，创建物理卷和卷组"><a href="#新加硬盘分区，创建物理卷和卷组" class="headerlink" title="新加硬盘分区，创建物理卷和卷组"></a>新加硬盘分区，创建物理卷和卷组</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">lsblk</span><br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">fdisk <span class="hljs-regexp">/dev/</span>sdc<br></code></pre></td></tr></table></figure><p><img src="9.13.1.png" alt="9.13.1"></p><p>由于是作为逻辑卷，格式选择8e</p><p><img src="9.13.2.png" alt="9.13.2"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pvcreate <span class="hljs-regexp">/dev/</span>sdc1<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vgcreate mysql <span class="hljs-regexp">/dev/</span>sdc1<br></code></pre></td></tr></table></figure><p><img src="9.13.3.png" alt="9.13.3"></p><h4 id="2-创建逻辑卷-并确认"><a href="#2-创建逻辑卷-并确认" class="headerlink" title="2.创建逻辑卷,并确认"></a>2.创建逻辑卷,并确认</h4><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">lvcreate</span> -l <span class="hljs-number">100</span>%free -n mysql mysql<br></code></pre></td></tr></table></figure><p><img src="9.13.4.png" alt="9.13.4"></p></li></ol></li></ol><h4 id="3-格式化，确认情况后自动挂载"><a href="#3-格式化，确认情况后自动挂载" class="headerlink" title="3.格式化，确认情况后自动挂载"></a>3.格式化，确认情况后自动挂载</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkfs.ext4 <span class="hljs-regexp">/dev/my</span>sql/mysql<br></code></pre></td></tr></table></figure><p><img src="9.13.5.png" alt="9.13.5"></p><p><img src="9.13.6.png" alt="9.13.6"></p><h3 id="2-扩展逻辑卷"><a href="#2-扩展逻辑卷" class="headerlink" title="2.扩展逻辑卷"></a>2.扩展逻辑卷</h3><ol><li>新增硬盘剩余空间变成lvm格式并创建物理卷</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pvcreate <span class="hljs-regexp">/dev/</span>sdc2<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">pvcreate <span class="hljs-regexp">/dev/</span>sdd1<br></code></pre></td></tr></table></figure><p>​     2.加入卷组          </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vgextend mysql <span class="hljs-regexp">/dev/</span>sdc2<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vgextend mysql <span class="hljs-regexp">/dev/</span>sdd1<br></code></pre></td></tr></table></figure><p><img src="9.13.7.png" alt="9.13.7"></p><p>​    3.扩容10g给逻辑卷</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">lvextend</span> -r -L +<span class="hljs-number">10</span>G mysql<br></code></pre></td></tr></table></figure><p><img src="9.13.8.png" alt="9.13.8"></p><h3 id="3-减缩逻辑卷"><a href="#3-减缩逻辑卷" class="headerlink" title="3.减缩逻辑卷"></a>3.减缩逻辑卷</h3><p>1.确认磁盘情况并卸载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">umount <span class="hljs-regexp">/data/my</span>sql<br></code></pre></td></tr></table></figure><p>2.检查磁盘情况，缩减到5g,重新挂载确认</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">e2fsck -f <span class="hljs-regexp">/data/my</span>sql<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">lvreduce</span> -r -L <span class="hljs-number">5</span>G mysql<br></code></pre></td></tr></table></figure><p><img src="9.13.9.png" alt="9.13.9"></p><p><img src="9.13.10.png" alt="9.13.10"></p><h2 id="2-编译-nginx-httpd-源码最新-列出可选参数说明"><a href="#2-编译-nginx-httpd-源码最新-列出可选参数说明" class="headerlink" title="2.编译 nginx httpd 源码最新 列出可选参数说明"></a>2.编译 nginx httpd 源码最新 列出可选参数说明</h2><h3 id="1-编译安装nginx"><a href="#1-编译安装nginx" class="headerlink" title="1.编译安装nginx"></a>1.编译安装nginx</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget http:<span class="hljs-regexp">//</span>nginx.org<span class="hljs-regexp">/download/</span>nginx-<span class="hljs-number">1.25</span>.<span class="hljs-number">2</span>.tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zvxf nginx-<span class="hljs-number">1</span>.<span class="hljs-number">25</span>.<span class="hljs-number">2</span> tar.gz<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/configure --prefix=/u</span>sr<span class="hljs-regexp">/local/</span>nginx<br></code></pre></td></tr></table></figure><p>报错：C compiler cc is not found</p><p>GCC以及相关未安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> gcc<br></code></pre></td></tr></table></figure><p>再次尝试</p><p>error :the HTTP rewrite module requires the PCRE library</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> pcre-devel<br></code></pre></td></tr></table></figure><p>error :the HTTP gzip module requires the zlib library</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> zlib-devel<br></code></pre></td></tr></table></figure><p>无报错</p><p><img src="9.13.11.png" alt="9.13.11"></p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-built_in">make</span> &amp;&amp; <span class="hljs-built_in">make</span> install<br></code></pre></td></tr></table></figure><p>检查是否正确安装并启动</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx -t<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/nginx/</span>sbin/nginx <br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">ps</span> -ef | <span class="hljs-keyword">grep</span> nginx <br></code></pre></td></tr></table></figure><p><img src="9.13.12.png" alt="9.13.12"></p><p><img src="9.13.13.png" alt="9.13.13"></p><h3 id="2-编译安装httpd"><a href="#2-编译安装httpd" class="headerlink" title="2.编译安装httpd"></a>2.编译安装httpd</h3><p>1下载并解压</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//</span>dlcdn.apache.org<span class="hljs-regexp">/httpd/</span>httpd-<span class="hljs-number">2.4</span>.<span class="hljs-number">57</span>.tar.gz -P <span class="hljs-regexp">/usr/</span>local/src<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> xf httpd-<span class="hljs-number">2</span>.<span class="hljs-number">4</span>.<span class="hljs-number">57</span>.tar.gz<br></code></pre></td></tr></table></figure><p><img src="9.13.14.png" alt="9.13.14"></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/configure --prefix=/u</span>sr<span class="hljs-regexp">/local/</span>apache<br></code></pre></td></tr></table></figure><p>error:APR not Found</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y apr-devel<br></code></pre></td></tr></table></figure><p>error:APR-util not Found</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs cmake">yum <span class="hljs-keyword">install</span> -y apr-util-devel<br></code></pre></td></tr></table></figure><p>没有报错</p><p><img src="9.13.15.png" alt="9.13.15"></p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">make</span><br></code></pre></td></tr></table></figure><p>gcc:fetal error : /usr/lib/rpm/redhat/redhat-hardened-ld</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">yum provides <span class="hljs-regexp">/usr/</span>lib<span class="hljs-regexp">/rpm/</span>redhat/redhat-hardened-ld<br></code></pre></td></tr></table></figure><p>缺少redhat-rpm-config</p><p>yum安装失败，尝试dnf安装可行</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gauss"><span class="hljs-built_in">make</span> &amp;&amp; <span class="hljs-built_in">make</span> install<br></code></pre></td></tr></table></figure><p><img src="9.13.16.png" alt="9.13.16"></p><p>启动确认</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/apache/</span>bin/apachectl start<br></code></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">ps</span> -ef | <span class="hljs-keyword">grep</span> httpd<br></code></pre></td></tr></table></figure><p><img src="9.13.17.png" alt="9.13.17"></p><p><img src="9.13.18.png" alt="9.13.18"></p><h3 id="3-列出可选参数说明"><a href="#3-列出可选参数说明" class="headerlink" title="3.列出可选参数说明"></a>3.列出可选参数说明</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --<span class="hljs-built_in">help</span><br></code></pre></td></tr></table></figure><p><img src="9.13.19.png" alt="9.13.19"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>9.11-9.15</title>
    <link href="/2023/09/12/9-11-9-15/"/>
    <url>/2023/09/12/9-11-9-15/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><span id="more"></span><p>1.如何只取出ip地址；若有2个如何取出；若有内外网ip，如何单纯取出内网ip</p><p>如何只取出ip地址</p><figure class="highlight nginx"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ifconfig</span> | grep <span class="hljs-string">&#x27;inet&#x27;</span> |head -n1 |awk <span class="hljs-string">&#x27;&#123;print<span class="hljs-variable">$2</span>&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="9.11.1.png" alt="9.11.1"></p><p>若有2个如何取出</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">ifconfig | <span class="hljs-keyword">grep</span> <span class="hljs-string">&#x27;inet&#x27;</span> |<span class="hljs-keyword">grep</span> <span class="hljs-string">&#x27;broadcast&#x27;</span> |head -n2 |awk <span class="hljs-string">&#x27;&#123;print$2&#125;&#x27;</span><br></code></pre></td></tr></table></figure><p><img src="9.11.2.png" alt="9.11.2"></p><p>若有内外网ip，如何单纯取出内网ip</p><p>内网ip</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">hostname -<span class="hljs-selector-tag">I</span><br></code></pre></td></tr></table></figure><p><img src="9.11.3.png" alt="9.11.3"></p><p>外网ip</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">curl myip.ipip.<span class="hljs-built_in">net</span><br></code></pre></td></tr></table></figure><p><img src="9.11.4.png" alt="9.11.4"></p><p>2.虚拟机增加1块10g盘， 挂在到date目录 格式化xfs</p><ol><li>虚拟机新加10g盘</li></ol><p><img src="9.11.5.png" alt="9.11.5"></p><p>   2.添加data目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /data<br></code></pre></td></tr></table></figure><p><img src="9.11.6.png" alt="9.11.6"></p><p> 3.新建分区，格式化为xfs格式，挂载在data目录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ll <span class="hljs-regexp">/dev/</span>sd*<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">fdisk <span class="hljs-regexp">/dev/</span>sdb<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkfs.xfs <span class="hljs-regexp">/dev/</span>sdb -f<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">自动挂载用vim <span class="hljs-regexp">/etc/</span>fstab 选择/data目录 xfs格式 fs_freq（<span class="hljs-number">0</span>不备份 <span class="hljs-number">1</span>备份）和fs_passno（<span class="hljs-number">0</span>不检验 <span class="hljs-number">1</span>检验）<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><p>重启后即可发现挂载已经生效</p><p><img src="9.11.7.png" alt="9.11.7"></p><p><img src="9.11.8.png" alt="9.11.8"></p><p><img src="9.11.9.png" alt="9.11.9"></p><p><img src="9.11.10.png" alt="9.11.10"></p><p>3.swap 增加10g虚拟盘 挂在到该分区</p><ol><li><p>创建1个10g文件并格式化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /swap<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">dd <span class="hljs-attribute">if</span>=/dev/zero <span class="hljs-attribute">of</span>=/swap/swapfile <span class="hljs-attribute">bs</span>=1G <span class="hljs-attribute">count</span>=10<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">mkswap <span class="hljs-regexp">/swap/</span>swapfile<br></code></pre></td></tr></table></figure></li></ol><p><img src="9.11.11.png" alt="9.11.11"></p><p>​    2.启动文件，自动挂载</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">swapon <span class="hljs-regexp">/swap/</span>swapfile<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>fstab 增加一行<span class="hljs-regexp">/swap/</span>swapfile swap swap dafaults <span class="hljs-number">00</span><br></code></pre></td></tr></table></figure><p>​    3.重启并确认情况</p><p><img src="9.11.12.png" alt="9.11.12"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第3周</title>
    <link href="/2023/07/24/%E7%AC%AC3%E5%91%A8/"/>
    <url>/2023/07/24/%E7%AC%AC3%E5%91%A8/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><span id="more"></span><ol><li>yum私有仓库的实现及博客输出</li></ol><figure class="highlight stylus"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-id">#yum</span> -y install httpd<br><span class="hljs-selector-id">#systemctl</span> enable <span class="hljs-attr">--now</span> httpd<br><span class="hljs-selector-id">#dnf</span> reposync <span class="hljs-attr">--repoid</span>=epel <span class="hljs-attr">--download-metadata</span> -<span class="hljs-selector-tag">p</span> /var/www/<span class="hljs-selector-tag">html</span><br><br></code></pre></td></tr></table></figure><p><img src="3.1.png" alt="3.1"></p><p><img src="3.2.png" alt="3.2"></p><p>3.画图 TCP协议和三次握手及四次挥手</p><p>TCP三次握手</p><p><img src="3.3.png" alt="3.3"></p><p>TCP四次挥手</p><p><img src="3.4.png" alt="3.4"></p><p>4.静态配置网卡IP，centos/ubuntu实现</p><p><img src="3.5.png" alt="3.5"></p><p><img src="3.6.png" alt="3.6"></p><p><img src="3.7.png" alt="3.7"></p><ol start="5"><li>实现免密登陆脚本, expect登陆远程主机，将生成的密钥写入到目标主机, expect测试远程登陆。<br>1）通过shift读取脚本参数<br>2）通过select来选择功能.例如功能有</li></ol><ul><li>安装mysql</li><li>安装apache</li><li>免密钥登陆主机<br>当前我们只实现免密钥登陆主机<br>3）通过函数封装每个功能<br>4）将免密钥登陆的过程可以重复进行, while 循环实现重复，需要有退出过程。当用户输入exit时，退出免密钥功能。<br>5）支持输入一批主机免密钥，使用数组 实现</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section">#!/bin/bash</span><br><span class="hljs-section">#</span><br><span class="hljs-section">#<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**<span class="hljs-emphasis">*</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#Author:      Mistypic</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#Date:    2023-07-24</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#FileName:  2.sh</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#Description:        </span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#Copyright (C):    2023 All rights reserved</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#*</span>**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br>menu() &#123;<br>while true;do<br><span class="hljs-code">    PS3=&quot;请选择（1-3）&quot;</span><br><span class="hljs-code">    select Menu in 安装mysql 安装apache 免密钥登陆主机 </span><br><span class="hljs-code">        case $REPLY in</span><br><span class="hljs-code">            1)</span><br><span class="hljs-code">                install_mysql</span><br><span class="hljs-code">                break</span><br><span class="hljs-code">                ;;</span><br><span class="hljs-code">            2)</span><br><span class="hljs-code">                install_apache</span><br><span class="hljs-code">                break</span><br><span class="hljs-code">                ;;</span><br><span class="hljs-code">            3)</span><br><span class="hljs-code">                ssh_host</span><br><span class="hljs-code">                break</span><br><span class="hljs-code">                ;;</span><br><span class="hljs-code">     esac</span><br><span class="hljs-code">     done </span><br><span class="hljs-code">done</span><br><span class="hljs-code">&#125;</span><br><span class="hljs-code"></span><br><span class="hljs-code">                  </span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第2周</title>
    <link href="/2023/07/09/%E7%AC%AC2%E5%91%A8/"/>
    <url>/2023/07/09/%E7%AC%AC2%E5%91%A8/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="第2周作业"><a href="#第2周作业" class="headerlink" title="第2周作业"></a>第2周作业</h1><span id="more"></span><ol><li>运行脚本可以显示出本机的ip地址</li><li>如果ip地址中有3这个数字，那么就打印出当前的系统时间</li><li>如果ip地址中不含3这个数字，就批量建立用户magedu_00, magedu_01, … magedu_100并且所有用户同属于magedu组</li><li>打印出/etc/passwd这个文件中可以登陆的用户（非/usr/sbin/nologin）</li><li>yum安装nginx服务，并且启动该服务</li><li>一个脚本完成”</li></ol><figure class="highlight markdown"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><pre><code class="hljs markdown"><span class="hljs-section">#!/bin/bash</span><br><span class="hljs-section">#</span><br><span class="hljs-section">#<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**<span class="hljs-emphasis">*</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#Author:      Mistypic</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#Date:    2023-07-09</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#FileName:  2.sh</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#Description:        </span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#Copyright (C):    2023 All rights reserved</span></span></span><br><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-section">#*</span>**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br><br><span class="hljs-section">#<span class="hljs-strong">****</span><span class="hljs-strong">****</span>1.运行脚本显示本机ip地址<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-emphasis">* </span></span><br><span class="hljs-emphasis"><span class="hljs-section">IP=$(ifconfig |grep &#x27;inet&#x27; |sed -n &#x27;1p&#x27;)</span></span><br><span class="hljs-emphasis"><span class="hljs-section">echo  $IP</span></span><br><span class="hljs-emphasis"><span class="hljs-section"></span></span><br><span class="hljs-emphasis"><span class="hljs-section"></span></span><br><span class="hljs-emphasis"><span class="hljs-section">#<span class="hljs-strong">****</span><span class="hljs-strong">****</span>2.判断ip中是否有3这个数字<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span></span><br><span class="hljs-emphasis"><span class="hljs-section">if [[$IP =~ &#x27;3&#x27; ]];then</span></span><br><span class="hljs-emphasis"><span class="hljs-section">    echo $(date +%F+%X)</span></span><br><span class="hljs-emphasis"><span class="hljs-section">else</span></span><br><span class="hljs-emphasis"><span class="hljs-section">     groupadd magedu </span></span><br><span class="hljs-emphasis"><span class="hljs-section">     for i in &#123;1..100&#125;;do</span></span><br><span class="hljs-emphasis"><span class="hljs-section">         useradd magedu_$i -g magedu</span></span><br><span class="hljs-emphasis"><span class="hljs-section">     done</span></span><br><span class="hljs-emphasis"><span class="hljs-section">fi</span></span><br><span class="hljs-emphasis"><span class="hljs-section"></span></span><br><span class="hljs-emphasis"><span class="hljs-section">#<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>3.打印/etc/passwd中可以登录用户,非/usr/sbin/nologin<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">**</span></span></span><br><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-section">echo &quot;可以登录用户：&quot;</span></span></span><br><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-section">cat /etc/passwd | grep -v /sbin &amp;&amp; cat /etc/passwd |grep -v /nologin</span></span></span><br><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-section"></span></span></span><br><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-section">#**</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span>*</span>4.yum安装nginx服务并启动<span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span><span class="hljs-strong">****</span></span><br>echo &quot;安装nginx&quot;<br>yum install -y nginx <br><br>echo &quot;启动服务&quot;<br>systemctl start nginx <br><br></code></pre></td></tr></table></figure> <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="110" src="//music.163.com/outchain/player?type=0&id=2879044695&auto=1&height=90"></iframe>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第一周</title>
    <link href="/2023/07/02/%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
    <url>/2023/07/02/%E7%AC%AC%E4%B8%80%E5%91%A8/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id><a href="#" class="headerlink" title></a></h1><span id="more"></span><ol><li><p>图文并茂解释开源许可证 GPL、BSD、MIT、Mozilla、Apache和LGPL的区别？</p><p><img src="1.1.png" alt="1.1"></p></li></ol><p>2.安装各发行版系统的安装(centos, rockylinux, ubuntu, 等)（以rockylinux）</p><p><img src="2.01.png" alt="2.01"></p><p><img src="2.02.png" alt="2.02"></p><p><img src="2.03.png" alt="2.03"></p><p><img src="2.1.png" alt="2.1"></p><p><img src="2.2.png" alt="2.2"></p><p><img src="2.3.png" alt="2.3"></p><p><img src="2.4.png" alt="2.4"></p><p><img src="2.5.png" alt="2.5"></p><p><img src="2.6.png" alt="2.6"></p><p><img src="2.7.png" alt="2.7"></p><p><img src="2.8.png" alt="2.8"></p><p><img src="2.9.png" alt="2.9"></p><ol start="3"><li>Linux中总结，1）如何通过一个简短的关键字 【man -k man -k process 】，例如process 获取相关的命令。2）通过命令的描述，选择一个命令，获取命令的man文档。【 man top】 3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。&lt;&gt;, [] …等各代表什么含义。4）根据语法部分 简要的写几个操作。</li></ol><p>1）如何通过一个简短的关键字， 获取相关的命令。（man -k echo）</p><p><img src="3.1.png" alt="3.1"></p><p>2）通过命令的描述，选择一个命令，获取命令的man文档。(man echo)</p><p><img src="3.2.png" alt="3.2"></p><p> 3）解读man文档，man分几个部分？man每个部分的解释，特别是语法部分。&lt;&gt;, [] …等各代表什么含义。</p><p>分为13个部分：</p><p>NAME：名字</p><p>SYNOPSIS:语法格式</p><p>DESCRIPTION:详情</p><p>EXAMPLES：举例</p><p>OVERVIEW:概述</p><p>DEFAULTS:默认</p><p>OPTIONS:选择</p><p>EXIT STATUS:退出状态</p><p>ENVIRONMENT:环境</p><p>FILES:文件</p><p>SEE ALSO: 另请参阅</p><p>HISTORY:历史</p><p>BUGS：问题反馈</p><p>&lt; &gt;：必选内容</p><p>[ ]  ：可选内容</p><p>…   ：同一内容，可以多次出现</p><p>4）根据语法部分 简要的写几个操作。</p><p><img src="3.4.png" alt="3.4"></p><ol start="4"><li><p>切换到/etc/目录，列出fstab文件的详细信息，详细解决fstab一行，每个或每几个字符的详细含义。</p><p><img src="4.1.png" alt="4.1"></p></li></ol><p> -：文件类型</p><p>rw-:属主的权限</p><p>r–:属组的权限</p><p>r–. :其他人权限</p><p>-rw-r–r–. :登录该系统的root用户有读取，写入的权限，root组的成员有读取权限，其他不属于root组的用户 只有读取权限</p><p>1 ：链接</p><p>root：属主</p><p>root：属组</p><p>655：大小</p><p>JUN 7 11:06:修改时间</p><p>/etc/fstab:文件位置</p><ol start="5"><li><p>简要说明FHS结构。</p><p>FHS结构类似于Windows操作系统中c盘的文件目录，FHS采用树形结构组织文件。FHS定义了系统中每个区域的用途、所需要的最小构成的文件和目录，同时还给出了例外处理与矛盾处理。</p><p>FHS定义了两层规范，第一层是， / 下面的各个目录应该要放什么文件数据，例如/etc应该要放置设置文件，/bin与/sbin则应该要放置可执行文件等等。</p><p>第二层则是针对/usr及/var这两个目录的子目录来定义等。</p></li></ol><p><img src="5.1.png" alt="5.1"></p><ol start="6"><li><p>用自己的理解总结 文件管理，用户管理，组用户，权限管理相关的命令。</p><p>文件管理：</p><p>pwd：显示当前目录</p><p>cat :查看内容</p><p>touch：修改文件的时间属性</p><p>用户管理：</p><p>useradd: 添加新用户</p><p>passwd：设置密码</p><p>id:显示用户id和所属群组id</p><p>su ：变成其他使用者</p><p>组用户：</p><p>groupadd：创建新组</p><p>groupdel：删除组</p><p>权限管理</p><p>chmod:修改目录或文件权限</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="110" src="//music.163.com/outchain/player?type=0&id=2879044695&auto=1&height=90"></iframe></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>晕了</title>
    <link href="/2023/06/27/%E6%99%95%E4%BA%86/"/>
    <url>/2023/06/27/%E6%99%95%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><span id="more"></span><p>研究了半天，结果阿里云还是登不上去，只能考虑单纯推送github</p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="110" src="//music.163.com/outchain/player?type=0&id=2879044695&auto=0&height=90"></iframe>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
